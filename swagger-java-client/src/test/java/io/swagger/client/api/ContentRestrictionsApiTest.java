/*
 * The Confluence Cloud REST API
 * This document describes the REST API and resources provided by Confluence. The REST APIs are for developers who want to integrate Confluence into their application and for administrators who want to script interactions with the Confluence server.Confluence's REST APIs provide access to resources (data entities) via URI paths. To use a REST API, your application will make an HTTP request and parse the response. The response format is JSON. Your methods will be the standard HTTP methods like GET, PUT, POST and DELETE. Because the REST API is based on open standards, you can use any web development language to access the API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.ContentRestriction;
import io.swagger.client.model.ContentRestrictionAddOrUpdateArray;
import io.swagger.client.model.ContentRestrictionArray;
import io.swagger.client.model.InlineResponseMap200;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for ContentRestrictionsApi
 */
@Ignore
public class ContentRestrictionsApiTest {

    private final ContentRestrictionsApi api = new ContentRestrictionsApi();

    /**
     * Add group to content restriction
     *
     * Adds a group to a content restriction. That is, grant read or update permission to the group for a piece of content.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to edit the content.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void addGroupToContentRestrictionTest() throws Exception {
        String id = null;
        String operationKey = null;
        String groupName = null;
        api.addGroupToContentRestriction(id, operationKey, groupName);

        // TODO: test validations
    }
    /**
     * Add group to content restriction
     *
     * Adds a group to a content restriction by Group Id. That is, grant read or update permission to the group for a piece of content.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to edit the content.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void addGroupToContentRestrictionByGroupIdTest() throws Exception {
        String id = null;
        String operationKey = null;
        String groupId = null;
        api.addGroupToContentRestrictionByGroupId(id, operationKey, groupId);

        // TODO: test validations
    }
    /**
     * Add restrictions
     *
     * Adds restrictions to a piece of content. Note, this does not change any existing restrictions on the content.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to edit the content.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void addRestrictionsTest() throws Exception {
        ContentRestrictionAddOrUpdateArray body = null;
        String id = null;
        List<String> expand = null;
        ContentRestrictionArray response = api.addRestrictions(body, id, expand);

        // TODO: test validations
    }
    /**
     * Add user to content restriction
     *
     * Adds a user to a content restriction. That is, grant read or update permission to the user for a piece of content.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to edit the content.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void addUserToContentRestrictionTest() throws Exception {
        String id = null;
        String operationKey = null;
        String key = null;
        String username = null;
        String accountId = null;
        api.addUserToContentRestriction(id, operationKey, key, username, accountId);

        // TODO: test validations
    }
    /**
     * Delete restrictions
     *
     * Removes all restrictions (read and update) on a piece of content.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to edit the content.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteRestrictionsTest() throws Exception {
        String id = null;
        List<String> expand = null;
        ContentRestrictionArray response = api.deleteRestrictions(id, expand);

        // TODO: test validations
    }
    /**
     * Get content restriction status for group
     *
     * Returns whether the specified content restriction applies to a group. For example, if a page with &#x60;id&#x3D;123&#x60; has a &#x60;read&#x60; restriction for the &#x60;admins&#x60; group, the following request will return &#x60;true&#x60;:  &#x60;/wiki/rest/api/content/123/restriction/byOperation/read/group/admins&#x60;  Note that a response of &#x60;true&#x60; does not guarantee that the group can view the page, as it does not account for account-inherited restrictions, space permissions, or even product access. For more information, see [Confluence permissions](https://confluence.atlassian.com/x/_AozKw).  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to view the content.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getContentRestrictionStatusForGroupTest() throws Exception {
        String id = null;
        String operationKey = null;
        String groupName = null;
        api.getContentRestrictionStatusForGroup(id, operationKey, groupName);

        // TODO: test validations
    }
    /**
     * Get content restriction status for user
     *
     * Returns whether the specified content restriction applies to a user. For example, if a page with &#x60;id&#x3D;123&#x60; has a &#x60;read&#x60; restriction for a user with an account ID of &#x60;384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192&#x60;, the following request will return &#x60;true&#x60;:  &#x60;/wiki/rest/api/content/123/restriction/byOperation/read/user?accountId&#x3D;384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192&#x60;  Note that a response of &#x60;true&#x60; does not guarantee that the user can view the page, as it does not account for account-inherited restrictions, space permissions, or even product access. For more information, see [Confluence permissions](https://confluence.atlassian.com/x/_AozKw).  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to view the content.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getContentRestrictionStatusForUserTest() throws Exception {
        String id = null;
        String operationKey = null;
        String key = null;
        String username = null;
        String accountId = null;
        api.getContentRestrictionStatusForUser(id, operationKey, key, username, accountId);

        // TODO: test validations
    }
    /**
     * Get content restriction status for group
     *
     * Returns whether the specified content restriction applies to a group. For example, if a page with &#x60;id&#x3D;123&#x60; has a &#x60;read&#x60; restriction for the &#x60;123456&#x60; group id, the following request will return &#x60;true&#x60;:  &#x60;/wiki/rest/api/content/123/restriction/byOperation/read/byGroupId/123456&#x60;  Note that a response of &#x60;true&#x60; does not guarantee that the group can view the page, as it does not account for account-inherited restrictions, space permissions, or even product access. For more information, see [Confluence permissions](https://confluence.atlassian.com/x/_AozKw).  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to view the content.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getIndividualGroupRestrictionStatusByGroupIdTest() throws Exception {
        String id = null;
        String operationKey = null;
        String groupId = null;
        api.getIndividualGroupRestrictionStatusByGroupId(id, operationKey, groupId);

        // TODO: test validations
    }
    /**
     * Get restrictions
     *
     * Returns the restrictions on a piece of content.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to view the content.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getRestrictionsTest() throws Exception {
        String id = null;
        List<String> expand = null;
        Integer start = null;
        Integer limit = null;
        ContentRestrictionArray response = api.getRestrictions(id, expand, start, limit);

        // TODO: test validations
    }
    /**
     * Get restrictions by operation
     *
     * Returns restrictions on a piece of content by operation. This method is similar to [Get restrictions](#api-content-id-restriction-get) except that the operations are properties of the return object, rather than items in a results array.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to view the content.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getRestrictionsByOperationTest() throws Exception {
        String id = null;
        List<String> expand = null;
        Map<String, InlineResponseMap200> response = api.getRestrictionsByOperation(id, expand);

        // TODO: test validations
    }
    /**
     * Get restrictions for operation
     *
     * Returns the restictions on a piece of content for a given operation (read or update).  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to view the content.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getRestrictionsForOperationTest() throws Exception {
        String id = null;
        String operationKey = null;
        List<String> expand = null;
        Integer start = null;
        Integer limit = null;
        ContentRestriction response = api.getRestrictionsForOperation(id, operationKey, expand, start, limit);

        // TODO: test validations
    }
    /**
     * Remove group from content restriction
     *
     * Removes a group from a content restriction. That is, remove read or update permission for the group for a piece of content.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to edit the content.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void removeGroupFromContentRestrictionTest() throws Exception {
        String id = null;
        String operationKey = null;
        String groupId = null;
        api.removeGroupFromContentRestriction(id, operationKey, groupId);

        // TODO: test validations
    }
    /**
     * Remove group from content restriction
     *
     * Removes a group from a content restriction. That is, remove read or update permission for the group for a piece of content.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to edit the content.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void removeGroupFromContentRestrictionByIdTest() throws Exception {
        String id = null;
        String operationKey = null;
        String groupName = null;
        api.removeGroupFromContentRestrictionById(id, operationKey, groupName);

        // TODO: test validations
    }
    /**
     * Remove user from content restriction
     *
     * Removes a group from a content restriction. That is, remove read or update permission for the group for a piece of content.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to edit the content.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void removeUserFromContentRestrictionTest() throws Exception {
        String id = null;
        String operationKey = null;
        String key = null;
        String username = null;
        String accountId = null;
        api.removeUserFromContentRestriction(id, operationKey, key, username, accountId);

        // TODO: test validations
    }
    /**
     * Update restrictions
     *
     * Updates restrictions for a piece of content. This removes the existing restrictions and replaces them with the restrictions in the request.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to edit the content.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateRestrictionsTest() throws Exception {
        ContentRestrictionAddOrUpdateArray body = null;
        String id = null;
        List<String> expand = null;
        ContentRestrictionArray response = api.updateRestrictions(body, id, expand);

        // TODO: test validations
    }
}
