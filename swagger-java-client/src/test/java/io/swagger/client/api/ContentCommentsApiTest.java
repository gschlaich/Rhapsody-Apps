/*
 * The Confluence Cloud REST API
 * This document describes the REST API and resources provided by Confluence. The REST APIs are for developers who want to integrate Confluence into their application and for administrators who want to script interactions with the Confluence server.Confluence's REST APIs provide access to resources (data entities) via URI paths. To use a REST API, your application will make an HTTP request and parse the response. The response format is JSON. Your methods will be the standard HTTP methods like GET, PUT, POST and DELETE. Because the REST API is based on open standards, you can use any web development language to access the API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.ContentArray;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for ContentCommentsApi
 */
@Ignore
public class ContentCommentsApiTest {

    private final ContentCommentsApi api = new ContentCommentsApi();

    /**
     * Get content comments
     *
     * Deprecated, use [Confluence&#x27;s v2 API](https://developer.atlassian.com/cloud/confluence/rest/v2/intro/).  Returns the comments on a piece of content.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: &#x27;View&#x27; permission for the space, and permission to view the content if it is a page.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getContentCommentsTest() throws Exception {
        String id = null;
        List<String> expand = null;
        Integer parentVersion = null;
        Integer start = null;
        Integer limit = null;
        List<String> location = null;
        String depth = null;
        ContentArray response = api.getContentComments(id, expand, parentVersion, start, limit, location, depth);

        // TODO: test validations
    }
}
