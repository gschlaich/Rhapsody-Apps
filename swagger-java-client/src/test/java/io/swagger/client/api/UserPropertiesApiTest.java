/*
 * The Confluence Cloud REST API
 * This document describes the REST API and resources provided by Confluence. The REST APIs are for developers who want to integrate Confluence into their application and for administrators who want to script interactions with the Confluence server.Confluence's REST APIs provide access to resources (data entities) via URI paths. To use a REST API, your application will make an HTTP request and parse the response. The response format is JSON. Your methods will be the standard HTTP methods like GET, PUT, POST and DELETE. Because the REST API is based on open standards, you can use any web development language to access the API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.UserProperty;
import io.swagger.client.model.UserPropertyCreate;
import io.swagger.client.model.UserPropertyKeyArray;
import io.swagger.client.model.UserPropertyUpdate;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for UserPropertiesApi
 */
@Ignore
public class UserPropertiesApiTest {

    private final UserPropertiesApi api = new UserPropertiesApi();

    /**
     * Create user property by key
     *
     * Creates a property for a user. For more information  about user properties, see [Confluence entity properties] (https://developer.atlassian.com/cloud/confluence/confluence-entity-properties/). &#x60;Note&#x60;, these properties stored against a user are on a Confluence site level and not space/content level.  &#x60;Note:&#x60; the number of properties which could be created per app in a tenant for each user might be restricted by fixed system limits. **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createUserPropertyTest() throws Exception {
        UserPropertyCreate body = null;
        String userId = null;
        String key = null;
        api.createUserProperty(body, userId, key);

        // TODO: test validations
    }
    /**
     * Delete user property
     *
     * Deletes a property for the given user. For more information about user properties, see [Confluence entity properties](https://developer.atlassian.com/cloud/confluence/confluence-entity-properties/). &#x60;Note&#x60;, these properties stored against a user are on a Confluence site level and not space/content level.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteUserPropertyTest() throws Exception {
        String userId = null;
        String key = null;
        api.deleteUserProperty(userId, key);

        // TODO: test validations
    }
    /**
     * Get user properties
     *
     * Returns the properties for a user as list of property keys. For more information about user properties, see [Confluence entity properties](https://developer.atlassian.com/cloud/confluence/confluence-entity-properties/). &#x60;Note&#x60;, these properties stored against a user are on a Confluence site level and not space/content level.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getUserPropertiesTest() throws Exception {
        String userId = null;
        Integer start = null;
        Integer limit = null;
        UserPropertyKeyArray response = api.getUserProperties(userId, start, limit);

        // TODO: test validations
    }
    /**
     * Get user property
     *
     * Returns the property corresponding to &#x60;key&#x60; for a user. For more information about user properties, see [Confluence entity properties](https://developer.atlassian.com/cloud/confluence/confluence-entity-properties/). &#x60;Note&#x60;, these properties stored against a user are on a Confluence site level and not space/content level.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getUserPropertyTest() throws Exception {
        String userId = null;
        String key = null;
        UserProperty response = api.getUserProperty(userId, key);

        // TODO: test validations
    }
    /**
     * Update user property
     *
     * Updates a property for the given user. Note, you cannot update the key of a user property, only the value. For more information about user properties, see [Confluence entity properties](https://developer.atlassian.com/cloud/confluence/confluence-entity-properties/). &#x60;Note&#x60;, these properties stored against a user are on a Confluence site level and not space/content level.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateUserPropertyTest() throws Exception {
        UserPropertyUpdate body = null;
        String userId = null;
        String key = null;
        api.updateUserProperty(body, userId, key);

        // TODO: test validations
    }
}
