/*
 * The Confluence Cloud REST API
 * This document describes the REST API and resources provided by Confluence. The REST APIs are for developers who want to integrate Confluence into their application and for administrators who want to script interactions with the Confluence server.Confluence's REST APIs provide access to resources (data entities) via URI paths. To use a REST API, your application will make an HTTP request and parse the response. The response format is JSON. Your methods will be the standard HTTP methods like GET, PUT, POST and DELETE. Because the REST API is based on open standards, you can use any web development language to access the API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.LabelArray;
import io.swagger.client.model.LabelCreate;
import io.swagger.client.model.LongTask;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for ExperimentalApi
 */
@Ignore
public class ExperimentalApiTest {

    private final ExperimentalApi api = new ExperimentalApi();

    /**
     * Add labels to a space
     *
     * Adds labels to a piece of content. Does not modify the existing labels.  Notes:  - Labels can also be added when creating content ([Create content](#api-content-post)). - Labels can be updated when updating content ([Update content](#api-content-id-put)). This will delete the existing labels and replace them with the labels in the request.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to update the content.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void addLabelsToSpaceTest() throws Exception {
        List<LabelCreate> body = null;
        String spaceKey = null;
        LabelArray response = api.addLabelsToSpace(body, spaceKey);

        // TODO: test validations
    }
    /**
     * Remove label from a space
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteLabelFromSpaceTest() throws Exception {
        String spaceKey = null;
        String name = null;
        String prefix = null;
        api.deleteLabelFromSpace(spaceKey, name, prefix);

        // TODO: test validations
    }
    /**
     * Delete page tree
     *
     * Moves a pagetree rooted at a page to the space&#x27;s trash:  - If the content&#x27;s type is &#x60;page&#x60; and its status is &#x60;current&#x60;, it will be trashed including all its descendants. - For every other combination of content type and status, this API is not supported.  This API accepts the pageTree delete request and returns a task ID. The delete process happens asynchronously.   Response example:  &lt;pre&gt;&lt;code&gt;  {       \&quot;id\&quot; : \&quot;1180606\&quot;,       \&quot;links\&quot; : {            \&quot;status\&quot; : \&quot;/rest/api/longtask/1180606\&quot;       }  }  &lt;/code&gt;&lt;/pre&gt;  Use the &#x60;/longtask/&lt;taskId&gt;&#x60; REST API to get the copy task status.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: &#x27;Delete&#x27; permission for the space that the content is in.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deletePageTreeTest() throws Exception {
        String id = null;
        LongTask response = api.deletePageTree(id);

        // TODO: test validations
    }
    /**
     * Get Space Labels
     *
     * Returns a list of labels associated with a space. Can provide a prefix as well as other filters to select different types of labels.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getLabelsForSpaceTest() throws Exception {
        String spaceKey = null;
        String prefix = null;
        Integer start = null;
        Integer limit = null;
        LabelArray response = api.getLabelsForSpace(spaceKey, prefix, start, limit);

        // TODO: test validations
    }
}
