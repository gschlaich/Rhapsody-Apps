/*
 * The Confluence Cloud REST API
 * This document describes the REST API and resources provided by Confluence. The REST APIs are for developers who want to integrate Confluence into their application and for administrators who want to script interactions with the Confluence server.Confluence's REST APIs provide access to resources (data entities) via URI paths. To use a REST API, your application will make an HTTP request and parse the response. The response format is JSON. Your methods will be the standard HTTP methods like GET, PUT, POST and DELETE. Because the REST API is based on open standards, you can use any web development language to access the API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.AsyncId;
import io.swagger.client.model.AvailableContentStates;
import io.swagger.client.model.BulkContentStateSetInput;
import io.swagger.client.model.ContentArray;
import io.swagger.client.model.ContentState;
import io.swagger.client.model.ContentStateBulkSetTaskUpdate;
import io.swagger.client.model.ContentStateResponse;
import io.swagger.client.model.ContentStateRestInput;
import io.swagger.client.model.ContentStateSettings;
import io.swagger.client.model.ContentstatesDeleteBody;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for ContentStatesApi
 */
@Ignore
public class ContentStatesApiTest {

    private final ContentStatesApi api = new ContentStatesApi();

    /**
     * Bulk remove content states from content
     *
     * Creates a long running task that Removes content state from draft or published versions of pages specified.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required** Content Edit Permission for a content to have its state removed via this endpoint.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void bulkRemoveContentStatesTest() throws Exception {
        String status = null;
        ContentstatesDeleteBody body = null;
        AsyncId response = api.bulkRemoveContentStates(status, body);

        // TODO: test validations
    }
    /**
     * Bulk set content state of many contents
     *
     * Creates a long running task that sets content state of draft or published versions of pages specified.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required** Content Edit Permission for a content to have its state set via this endpoint.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void bulkSetContentStatesTest() throws Exception {
        BulkContentStateSetInput body = null;
        String status = null;
        AsyncId response = api.bulkSetContentStates(body, status);

        // TODO: test validations
    }
    /**
     * Gets available content states for content.
     *
     * Gets content states that are available for the content to be set as. Will return all enabled Space Content States. Will only return most the 3 most recently published custom content states to match UI editor list. To get all custom content states, use the /content-states endpoint.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to edit the content.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getAvailableContentStatesTest() throws Exception {
        String id = null;
        AvailableContentStates response = api.getAvailableContentStates(id);

        // TODO: test validations
    }
    /**
     * Get content state
     *
     * Gets the current content state of the draft or current version of content. To specify the draft version, set the parameter status to draft, otherwise archived or current will get the relevant published state. **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to view the content.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getContentStateTest() throws Exception {
        String id = null;
        String status = null;
        ContentStateResponse response = api.getContentState(id, status);

        // TODO: test validations
    }
    /**
     * Get content state settings for space
     *
     * Get object describing whether content states are allowed at all, if custom content states or space content states are restricted, and a list of space content states allowed for the space if they are not restricted.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Space admin permission
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getContentStateSettingsTest() throws Exception {
        String spaceKey = null;
        ContentStateSettings response = api.getContentStateSettings(spaceKey);

        // TODO: test validations
    }
    /**
     * Get content in space with given content state
     *
     * Finds paginated content with   **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Space View Permission
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getContentsWithStateTest() throws Exception {
        String spaceKey = null;
        Integer stateId = null;
        List<String> expand = null;
        Integer limit = null;
        Integer start = null;
        ContentArray response = api.getContentsWithState(spaceKey, stateId, expand, limit, start);

        // TODO: test validations
    }
    /**
     * Get Custom Content States
     *
     * Get custom content states that authenticated user has created.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required** Must have user authentication.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getCustomContentStatesTest() throws Exception {
        List<ContentState> response = api.getCustomContentStates();

        // TODO: test validations
    }
    /**
     * Get space suggested content states
     *
     * Get content states that are suggested in the space. **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Space view permission
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getSpaceContentStatesTest() throws Exception {
        String spaceKey = null;
        List<ContentState> response = api.getSpaceContentStates(spaceKey);

        // TODO: test validations
    }
    /**
     * Get update on long running task for setting of content state.
     *
     * Get Status of long running task that was previously created to set or remove content states from content. User must first create a task by passing in details to /wiki/rest/api/content-states PUT or DELETE endpoints.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required** Must have created long running task
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getTaskUpdateTest() throws Exception {
        String taskId = null;
        ContentStateBulkSetTaskUpdate response = api.getTaskUpdate(taskId);

        // TODO: test validations
    }
    /**
     * Removes the content state of a content and publishes a new version.
     *
     * Removes the content state of the content specified and creates a new version (publishes the content without changing the body) of the content with the new status.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to edit the content.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void removeContentStateTest() throws Exception {
        String id = null;
        String status = null;
        ContentStateResponse response = api.removeContentState(id, status);

        // TODO: test validations
    }
    /**
     * Set the content state of a content and publishes a new version of the content.
     *
     * Sets the content state of the content specified and creates a new version (publishes the content without changing the body) of the content with the new state.  You may pass in either an id of a state, or the name and color of a desired new state. If all 3 are passed in, id will be used. If the name and color passed in already exist under the current user&#x27;s existing custom states, the existing state will be reused. If custom states are disabled in the space of the content (which can be determined by getting the content state space settings of the content&#x27;s space) then this set will fail.  You may not remove a content state via this PUT request. You must use the DELETE method. A specified state is required in the body of this request.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to edit the content.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void setContentStateTest() throws Exception {
        ContentStateRestInput body = null;
        String id = null;
        String status = null;
        ContentStateResponse response = api.setContentState(body, id, status);

        // TODO: test validations
    }
}
