/*
 * The Confluence Cloud REST API
 * This document describes the REST API and resources provided by Confluence. The REST APIs are for developers who want to integrate Confluence into their application and for administrators who want to script interactions with the Confluence server.Confluence's REST APIs provide access to resources (data entities) via URI paths. To use a REST API, your application will make an HTTP request and parse the response. The response format is JSON. Your methods will be the standard HTTP methods like GET, PUT, POST and DELETE. Because the REST API is based on open standards, you can use any web development language to access the API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.AsyncContentBody;
import io.swagger.client.model.AsyncId;
import io.swagger.client.model.ContentBody;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for ContentBodyApi
 */
@Ignore
public class ContentBodyApiTest {

    private final ContentBodyApi api = new ContentBodyApi();

    /**
     * Asynchronously convert content body
     *
     * Converts a content body from one format to another format asynchronously. Returns the asyncId for the asynchronous task.  Supported conversions:  - storage: export_view  No other conversions are supported at the moment. Once a conversion is completed, it will be available for 5 minutes at the result endpoint.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: If request specifies &#x27;contentIdContext&#x27;, &#x27;View&#x27; permission for the space, and permission to view the content.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void asyncConvertContentBodyRequestTest() throws Exception {
        Map<String, Object> body = null;
        String to = null;
        List<String> expand = null;
        String spaceKeyContext = null;
        String contentIdContext = null;
        Boolean allowCache = null;
        String embeddedContentRender = null;
        AsyncId response = api.asyncConvertContentBodyRequest(body, to, expand, spaceKeyContext, contentIdContext, allowCache, embeddedContentRender);

        // TODO: test validations
    }
    /**
     * Get asynchronously converted content body from the id or the current status of the task.
     *
     * Returns the asynchronous content body for the corresponding id if the task is complete  or returns the status of the task.  After the task is completed, the result can be obtained for 5 minutes, or until an identical conversion request is made again, with allowCache query param set to false.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: If request specifies &#x27;contentIdContext&#x27;, &#x27;View&#x27; permission for the space, and permission to view the content.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void asyncConvertContentBodyResponseTest() throws Exception {
        String id = null;
        AsyncContentBody response = api.asyncConvertContentBodyResponse(id);

        // TODO: test validations
    }
    /**
     * Convert content body
     *
     * Converts a content body from one format to another format.  Supported conversions:  - storage: view, export_view, styled_view, editor - editor: storage - view: none - export_view: none - styled_view: none  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: If request specifies &#x27;contentIdContext&#x27;, &#x27;View&#x27; permission for the space, and permission to view the content.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void convertContentBodyTest() throws Exception {
        Map<String, Object> body = null;
        String to = null;
        String spaceKeyContext = null;
        String contentIdContext = null;
        String embeddedContentRender = null;
        List<String> expand = null;
        ContentBody response = api.convertContentBody(body, to, spaceKeyContext, contentIdContext, embeddedContentRender, expand);

        // TODO: test validations
    }
}
