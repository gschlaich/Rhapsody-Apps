/*
 * The Confluence Cloud REST API
 * This document describes the REST API and resources provided by Confluence. The REST APIs are for developers who want to integrate Confluence into their application and for administrators who want to script interactions with the Confluence server.Confluence's REST APIs provide access to resources (data entities) via URI paths. To use a REST API, your application will make an HTTP request and parse the response. The response format is JSON. Your methods will be the standard HTTP methods like GET, PUT, POST and DELETE. Because the REST API is based on open standards, you can use any web development language to access the API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.IdLabelBody;
import io.swagger.client.model.LabelArray;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for ContentLabelsApi
 */
@Ignore
public class ContentLabelsApiTest {

    private final ContentLabelsApi api = new ContentLabelsApi();

    /**
     * Add labels to content
     *
     * Adds labels to a piece of content. Does not modify the existing labels.  Notes:  - Labels can also be added when creating content ([Create content](#api-content-post)). - Labels can be updated when updating content ([Update content](#api-content-id-put)). This will delete the existing labels and replace them with the labels in the request.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to update the content.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void addLabelsToContentTest() throws Exception {
        IdLabelBody body = null;
        String id = null;
        LabelArray response = api.addLabelsToContent(body, id);

        // TODO: test validations
    }
    /**
     * Get labels for content
     *
     * Deprecated, use [Confluence&#x27;s v2 API](https://developer.atlassian.com/cloud/confluence/rest/v2/intro/).  Returns the labels on a piece of content.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: &#x27;View&#x27; permission for the space and permission to view the content if it is a page.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getLabelsForContentTest() throws Exception {
        String id = null;
        String prefix = null;
        Integer start = null;
        Integer limit = null;
        LabelArray response = api.getLabelsForContent(id, prefix, start, limit);

        // TODO: test validations
    }
    /**
     * Remove label from content
     *
     * Removes a label from a piece of content. Labels can&#x27;t be deleted from archived content. This is similar to [Remove label from content using query parameter](#api-content-id-label-delete) except that the label name is specified via a path parameter.  Use this method if the label name does not have \&quot;/\&quot; characters, as the path parameter does not accept \&quot;/\&quot; characters for security reasons. Otherwise, use [Remove label from content using query parameter](#api-content-id-label-delete).  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to update the content.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void removeLabelFromContentTest() throws Exception {
        String id = null;
        String label = null;
        api.removeLabelFromContent(id, label);

        // TODO: test validations
    }
    /**
     * Remove label from content using query parameter
     *
     * Removes a label from a piece of content. Labels can&#x27;t be deleted from archived content. This is similar to [Remove label from content](#api-content-id-label-label-delete) except that the label name is specified via a query parameter.  Use this method if the label name has \&quot;/\&quot; characters, as [Remove label from content using query parameter](#api-content-id-label-delete) does not accept \&quot;/\&quot; characters for the label name.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to update the content.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void removeLabelFromContentUsingQueryParameterTest() throws Exception {
        String id = null;
        String name = null;
        api.removeLabelFromContentUsingQueryParameter(id, name);

        // TODO: test validations
    }
}
