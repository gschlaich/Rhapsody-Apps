/*
 * The Confluence Cloud REST API
 * This document describes the REST API and resources provided by Confluence. The REST APIs are for developers who want to integrate Confluence into their application and for administrators who want to script interactions with the Confluence server.Confluence's REST APIs provide access to resources (data entities) via URI paths. To use a REST API, your application will make an HTTP request and parse the response. The response format is JSON. Your methods will be the standard HTTP methods like GET, PUT, POST and DELETE. Because the REST API is based on open standards, you can use any web development language to access the API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiCallback;
import io.swagger.client.ApiClient;
import io.swagger.client.ApiException;
import io.swagger.client.ApiResponse;
import io.swagger.client.Configuration;
import io.swagger.client.Pair;
import io.swagger.client.ProgressRequestBody;
import io.swagger.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import io.swagger.client.model.AccountIdEmailRecord;
import io.swagger.client.model.AccountIdEmailRecordArray;
import io.swagger.client.model.BulkUserLookupArray;
import io.swagger.client.model.GroupArrayWithLinks;
import io.swagger.client.model.MigratedUserArray;
import io.swagger.client.model.User;
import io.swagger.client.model.UserAnonymous;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class UsersApi {
    private ApiClient apiClient;

    public UsersApi() {
        this(Configuration.getDefaultApiClient());
    }

    public UsersApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for getAnonymousUser
     * @param expand A multi-value parameter indicating which properties of the user to expand.    - &#x60;operations&#x60; returns the operations that the user is allowed to do. (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getAnonymousUserCall(List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/wiki/rest/api/user/anonymous";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (expand != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("csv", "expand", expand));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "basicAuth", "oAuthDefinitions" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getAnonymousUserValidateBeforeCall(List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = getAnonymousUserCall(expand, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get anonymous user
     * Returns information about how anonymous users are represented, like the profile picture and display name.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     * @param expand A multi-value parameter indicating which properties of the user to expand.    - &#x60;operations&#x60; returns the operations that the user is allowed to do. (optional)
     * @return UserAnonymous
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public UserAnonymous getAnonymousUser(List<String> expand) throws ApiException {
        ApiResponse<UserAnonymous> resp = getAnonymousUserWithHttpInfo(expand);
        return resp.getData();
    }

    /**
     * Get anonymous user
     * Returns information about how anonymous users are represented, like the profile picture and display name.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     * @param expand A multi-value parameter indicating which properties of the user to expand.    - &#x60;operations&#x60; returns the operations that the user is allowed to do. (optional)
     * @return ApiResponse&lt;UserAnonymous&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<UserAnonymous> getAnonymousUserWithHttpInfo(List<String> expand) throws ApiException {
        com.squareup.okhttp.Call call = getAnonymousUserValidateBeforeCall(expand, null, null);
        Type localVarReturnType = new TypeToken<UserAnonymous>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get anonymous user (asynchronously)
     * Returns information about how anonymous users are represented, like the profile picture and display name.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     * @param expand A multi-value parameter indicating which properties of the user to expand.    - &#x60;operations&#x60; returns the operations that the user is allowed to do. (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getAnonymousUserAsync(List<String> expand, final ApiCallback<UserAnonymous> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getAnonymousUserValidateBeforeCall(expand, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<UserAnonymous>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getBulkUserLookup
     * @param accountId A list of accountId&#x27;s of users to be returned. (required)
     * @param expand A multi-value parameter indicating which properties of the user to expand.    - &#x60;operations&#x60; returns the operations that the user is allowed to do.   - personalSpace returns the user&#x27;s personal space, if it exists. (optional)
     * @param limit The maximum number of results returned. Currently API returns 200 results max. If more that 200 ids are passed first 200 will be returned. (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getBulkUserLookupCall(String accountId, List<String> expand, Integer limit, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/wiki/rest/api/user/bulk";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (accountId != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("accountId", accountId));
        if (expand != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("csv", "expand", expand));
        if (limit != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("limit", limit));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "basicAuth", "oAuthDefinitions" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getBulkUserLookupValidateBeforeCall(String accountId, List<String> expand, Integer limit, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling getBulkUserLookup(Async)");
        }
        
        com.squareup.okhttp.Call call = getBulkUserLookupCall(accountId, expand, limit, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get multiple users using ids
     * Returns user details for the ids provided in request.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     * @param accountId A list of accountId&#x27;s of users to be returned. (required)
     * @param expand A multi-value parameter indicating which properties of the user to expand.    - &#x60;operations&#x60; returns the operations that the user is allowed to do.   - personalSpace returns the user&#x27;s personal space, if it exists. (optional)
     * @param limit The maximum number of results returned. Currently API returns 200 results max. If more that 200 ids are passed first 200 will be returned. (optional)
     * @return BulkUserLookupArray
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public BulkUserLookupArray getBulkUserLookup(String accountId, List<String> expand, Integer limit) throws ApiException {
        ApiResponse<BulkUserLookupArray> resp = getBulkUserLookupWithHttpInfo(accountId, expand, limit);
        return resp.getData();
    }

    /**
     * Get multiple users using ids
     * Returns user details for the ids provided in request.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     * @param accountId A list of accountId&#x27;s of users to be returned. (required)
     * @param expand A multi-value parameter indicating which properties of the user to expand.    - &#x60;operations&#x60; returns the operations that the user is allowed to do.   - personalSpace returns the user&#x27;s personal space, if it exists. (optional)
     * @param limit The maximum number of results returned. Currently API returns 200 results max. If more that 200 ids are passed first 200 will be returned. (optional)
     * @return ApiResponse&lt;BulkUserLookupArray&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<BulkUserLookupArray> getBulkUserLookupWithHttpInfo(String accountId, List<String> expand, Integer limit) throws ApiException {
        com.squareup.okhttp.Call call = getBulkUserLookupValidateBeforeCall(accountId, expand, limit, null, null);
        Type localVarReturnType = new TypeToken<BulkUserLookupArray>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get multiple users using ids (asynchronously)
     * Returns user details for the ids provided in request.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     * @param accountId A list of accountId&#x27;s of users to be returned. (required)
     * @param expand A multi-value parameter indicating which properties of the user to expand.    - &#x60;operations&#x60; returns the operations that the user is allowed to do.   - personalSpace returns the user&#x27;s personal space, if it exists. (optional)
     * @param limit The maximum number of results returned. Currently API returns 200 results max. If more that 200 ids are passed first 200 will be returned. (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getBulkUserLookupAsync(String accountId, List<String> expand, Integer limit, final ApiCallback<BulkUserLookupArray> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getBulkUserLookupValidateBeforeCall(accountId, expand, limit, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<BulkUserLookupArray>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getBulkUserMigration
     * @param key The key of a user. To specify multiple users, pass multiple key parameters separated by ampersands. For example, key&#x3D;mia&amp;key&#x3D;alana. Required if username isn&#x27;t provided. Cannot be provided if username is present. (optional)
     * @param username The username of a user. To specify multiple users, pass multiple username parameters separated by ampersands. For example, username&#x3D;mia&amp;username&#x3D;alana. Required if key isn&#x27;t provided. Cannot be provided if key is present. (optional)
     * @param start The index of the first item to return in a page of results (page offset). (optional, default to 0)
     * @param limit The maximum number of results to return per page. Note, this may be restricted by fixed system limits. (optional, default to 200)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getBulkUserMigrationCall(List<String> key, List<String> username, Integer start, Integer limit, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/wiki/rest/api/user/bulk/migration";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (key != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "key", key));
        if (username != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "username", username));
        if (start != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("start", start));
        if (limit != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("limit", limit));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "basicAuth", "oAuthDefinitions" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getBulkUserMigrationValidateBeforeCall(List<String> key, List<String> username, Integer start, Integer limit, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = getBulkUserMigrationCall(key, username, start, limit, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get user accountIds
     * Returns the accountIds for the users specified in the key or username parameters. Note that multiple key and username parameters can be specified.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: &#x27;Confluence Administrator&#x27; global permission if specifying a user, otherwise permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     * @param key The key of a user. To specify multiple users, pass multiple key parameters separated by ampersands. For example, key&#x3D;mia&amp;key&#x3D;alana. Required if username isn&#x27;t provided. Cannot be provided if username is present. (optional)
     * @param username The username of a user. To specify multiple users, pass multiple username parameters separated by ampersands. For example, username&#x3D;mia&amp;username&#x3D;alana. Required if key isn&#x27;t provided. Cannot be provided if key is present. (optional)
     * @param start The index of the first item to return in a page of results (page offset). (optional, default to 0)
     * @param limit The maximum number of results to return per page. Note, this may be restricted by fixed system limits. (optional, default to 200)
     * @return MigratedUserArray
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public MigratedUserArray getBulkUserMigration(List<String> key, List<String> username, Integer start, Integer limit) throws ApiException {
        ApiResponse<MigratedUserArray> resp = getBulkUserMigrationWithHttpInfo(key, username, start, limit);
        return resp.getData();
    }

    /**
     * Get user accountIds
     * Returns the accountIds for the users specified in the key or username parameters. Note that multiple key and username parameters can be specified.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: &#x27;Confluence Administrator&#x27; global permission if specifying a user, otherwise permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     * @param key The key of a user. To specify multiple users, pass multiple key parameters separated by ampersands. For example, key&#x3D;mia&amp;key&#x3D;alana. Required if username isn&#x27;t provided. Cannot be provided if username is present. (optional)
     * @param username The username of a user. To specify multiple users, pass multiple username parameters separated by ampersands. For example, username&#x3D;mia&amp;username&#x3D;alana. Required if key isn&#x27;t provided. Cannot be provided if key is present. (optional)
     * @param start The index of the first item to return in a page of results (page offset). (optional, default to 0)
     * @param limit The maximum number of results to return per page. Note, this may be restricted by fixed system limits. (optional, default to 200)
     * @return ApiResponse&lt;MigratedUserArray&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<MigratedUserArray> getBulkUserMigrationWithHttpInfo(List<String> key, List<String> username, Integer start, Integer limit) throws ApiException {
        com.squareup.okhttp.Call call = getBulkUserMigrationValidateBeforeCall(key, username, start, limit, null, null);
        Type localVarReturnType = new TypeToken<MigratedUserArray>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get user accountIds (asynchronously)
     * Returns the accountIds for the users specified in the key or username parameters. Note that multiple key and username parameters can be specified.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: &#x27;Confluence Administrator&#x27; global permission if specifying a user, otherwise permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     * @param key The key of a user. To specify multiple users, pass multiple key parameters separated by ampersands. For example, key&#x3D;mia&amp;key&#x3D;alana. Required if username isn&#x27;t provided. Cannot be provided if username is present. (optional)
     * @param username The username of a user. To specify multiple users, pass multiple username parameters separated by ampersands. For example, username&#x3D;mia&amp;username&#x3D;alana. Required if key isn&#x27;t provided. Cannot be provided if key is present. (optional)
     * @param start The index of the first item to return in a page of results (page offset). (optional, default to 0)
     * @param limit The maximum number of results to return per page. Note, this may be restricted by fixed system limits. (optional, default to 200)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getBulkUserMigrationAsync(List<String> key, List<String> username, Integer start, Integer limit, final ApiCallback<MigratedUserArray> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getBulkUserMigrationValidateBeforeCall(key, username, start, limit, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<MigratedUserArray>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getCurrentUser
     * @param expand A multi-value parameter indicating which properties of the user to expand.    - &#x60;operations&#x60; returns the operations that the user is allowed to do.   - personalSpace returns the user&#x27;s personal space, if it exists.   - &#x60;isExternalCollaborator&#x60; returns whether the user is an external collaborator user (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getCurrentUserCall(List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/wiki/rest/api/user/current";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (expand != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("csv", "expand", expand));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "basicAuth", "oAuthDefinitions" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getCurrentUserValidateBeforeCall(List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = getCurrentUserCall(expand, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get current user
     * Returns the currently logged-in user. This includes information about the user, like the display name, userKey, account ID, profile picture, and more.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     * @param expand A multi-value parameter indicating which properties of the user to expand.    - &#x60;operations&#x60; returns the operations that the user is allowed to do.   - personalSpace returns the user&#x27;s personal space, if it exists.   - &#x60;isExternalCollaborator&#x60; returns whether the user is an external collaborator user (optional)
     * @return User
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public User getCurrentUser(List<String> expand) throws ApiException {
        ApiResponse<User> resp = getCurrentUserWithHttpInfo(expand);
        return resp.getData();
    }

    /**
     * Get current user
     * Returns the currently logged-in user. This includes information about the user, like the display name, userKey, account ID, profile picture, and more.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     * @param expand A multi-value parameter indicating which properties of the user to expand.    - &#x60;operations&#x60; returns the operations that the user is allowed to do.   - personalSpace returns the user&#x27;s personal space, if it exists.   - &#x60;isExternalCollaborator&#x60; returns whether the user is an external collaborator user (optional)
     * @return ApiResponse&lt;User&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<User> getCurrentUserWithHttpInfo(List<String> expand) throws ApiException {
        com.squareup.okhttp.Call call = getCurrentUserValidateBeforeCall(expand, null, null);
        Type localVarReturnType = new TypeToken<User>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get current user (asynchronously)
     * Returns the currently logged-in user. This includes information about the user, like the display name, userKey, account ID, profile picture, and more.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     * @param expand A multi-value parameter indicating which properties of the user to expand.    - &#x60;operations&#x60; returns the operations that the user is allowed to do.   - personalSpace returns the user&#x27;s personal space, if it exists.   - &#x60;isExternalCollaborator&#x60; returns whether the user is an external collaborator user (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getCurrentUserAsync(List<String> expand, final ApiCallback<User> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getCurrentUserValidateBeforeCall(expand, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<User>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getGroupMembershipsForUser
     * @param accountId The account ID of the user. The accountId uniquely identifies the user across all Atlassian products. For example, &#x60;384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192&#x60;. (required)
     * @param start The starting index of the returned groups. (optional, default to 0)
     * @param limit The maximum number of groups to return per page. Note, this may be restricted by fixed system limits. (optional, default to 200)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getGroupMembershipsForUserCall(String accountId, Integer start, Integer limit, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/wiki/rest/api/user/memberof";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (accountId != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("accountId", accountId));
        if (start != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("start", start));
        if (limit != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("limit", limit));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "basicAuth", "oAuthDefinitions" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getGroupMembershipsForUserValidateBeforeCall(String accountId, Integer start, Integer limit, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling getGroupMembershipsForUser(Async)");
        }
        
        com.squareup.okhttp.Call call = getGroupMembershipsForUserCall(accountId, start, limit, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get group memberships for user
     * Returns the groups that a user is a member of.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     * @param accountId The account ID of the user. The accountId uniquely identifies the user across all Atlassian products. For example, &#x60;384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192&#x60;. (required)
     * @param start The starting index of the returned groups. (optional, default to 0)
     * @param limit The maximum number of groups to return per page. Note, this may be restricted by fixed system limits. (optional, default to 200)
     * @return GroupArrayWithLinks
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public GroupArrayWithLinks getGroupMembershipsForUser(String accountId, Integer start, Integer limit) throws ApiException {
        ApiResponse<GroupArrayWithLinks> resp = getGroupMembershipsForUserWithHttpInfo(accountId, start, limit);
        return resp.getData();
    }

    /**
     * Get group memberships for user
     * Returns the groups that a user is a member of.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     * @param accountId The account ID of the user. The accountId uniquely identifies the user across all Atlassian products. For example, &#x60;384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192&#x60;. (required)
     * @param start The starting index of the returned groups. (optional, default to 0)
     * @param limit The maximum number of groups to return per page. Note, this may be restricted by fixed system limits. (optional, default to 200)
     * @return ApiResponse&lt;GroupArrayWithLinks&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<GroupArrayWithLinks> getGroupMembershipsForUserWithHttpInfo(String accountId, Integer start, Integer limit) throws ApiException {
        com.squareup.okhttp.Call call = getGroupMembershipsForUserValidateBeforeCall(accountId, start, limit, null, null);
        Type localVarReturnType = new TypeToken<GroupArrayWithLinks>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get group memberships for user (asynchronously)
     * Returns the groups that a user is a member of.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     * @param accountId The account ID of the user. The accountId uniquely identifies the user across all Atlassian products. For example, &#x60;384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192&#x60;. (required)
     * @param start The starting index of the returned groups. (optional, default to 0)
     * @param limit The maximum number of groups to return per page. Note, this may be restricted by fixed system limits. (optional, default to 200)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getGroupMembershipsForUserAsync(String accountId, Integer start, Integer limit, final ApiCallback<GroupArrayWithLinks> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getGroupMembershipsForUserValidateBeforeCall(accountId, start, limit, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<GroupArrayWithLinks>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getPrivacyUnsafeUserEmail
     * @param accountId The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, &#x60;384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192&#x60;. Required. (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getPrivacyUnsafeUserEmailCall(String accountId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/wiki/rest/api/user/email";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (accountId != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("accountId", accountId));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getPrivacyUnsafeUserEmailValidateBeforeCall(String accountId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling getPrivacyUnsafeUserEmail(Async)");
        }
        
        com.squareup.okhttp.Call call = getPrivacyUnsafeUserEmailCall(accountId, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get user email address
     * Returns a user&#x27;s email address. This API is only available to apps approved by Atlassian, according to these [guidelines](https://community.developer.atlassian.com/t/guidelines-for-requesting-access-to-email-address/27603).  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     * @param accountId The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, &#x60;384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192&#x60;. Required. (required)
     * @return AccountIdEmailRecord
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public AccountIdEmailRecord getPrivacyUnsafeUserEmail(String accountId) throws ApiException {
        ApiResponse<AccountIdEmailRecord> resp = getPrivacyUnsafeUserEmailWithHttpInfo(accountId);
        return resp.getData();
    }

    /**
     * Get user email address
     * Returns a user&#x27;s email address. This API is only available to apps approved by Atlassian, according to these [guidelines](https://community.developer.atlassian.com/t/guidelines-for-requesting-access-to-email-address/27603).  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     * @param accountId The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, &#x60;384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192&#x60;. Required. (required)
     * @return ApiResponse&lt;AccountIdEmailRecord&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<AccountIdEmailRecord> getPrivacyUnsafeUserEmailWithHttpInfo(String accountId) throws ApiException {
        com.squareup.okhttp.Call call = getPrivacyUnsafeUserEmailValidateBeforeCall(accountId, null, null);
        Type localVarReturnType = new TypeToken<AccountIdEmailRecord>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get user email address (asynchronously)
     * Returns a user&#x27;s email address. This API is only available to apps approved by Atlassian, according to these [guidelines](https://community.developer.atlassian.com/t/guidelines-for-requesting-access-to-email-address/27603).  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     * @param accountId The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, &#x60;384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192&#x60;. Required. (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getPrivacyUnsafeUserEmailAsync(String accountId, final ApiCallback<AccountIdEmailRecord> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getPrivacyUnsafeUserEmailValidateBeforeCall(accountId, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<AccountIdEmailRecord>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getPrivacyUnsafeUserEmailBulk
     * @param accountId The account IDs of the users. (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getPrivacyUnsafeUserEmailBulkCall(List<String> accountId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/wiki/rest/api/user/email/bulk";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (accountId != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("csv", "accountId", accountId));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getPrivacyUnsafeUserEmailBulkValidateBeforeCall(List<String> accountId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling getPrivacyUnsafeUserEmailBulk(Async)");
        }
        
        com.squareup.okhttp.Call call = getPrivacyUnsafeUserEmailBulkCall(accountId, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get user email addresses in batch
     * Returns user email addresses for a set of accountIds. This API is only available to apps approved by Atlassian, according to these [guidelines](https://community.developer.atlassian.com/t/guidelines-for-requesting-access-to-email-address/27603).  Any accounts which are not available will not be included in the result.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     * @param accountId The account IDs of the users. (required)
     * @return AccountIdEmailRecordArray
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public AccountIdEmailRecordArray getPrivacyUnsafeUserEmailBulk(List<String> accountId) throws ApiException {
        ApiResponse<AccountIdEmailRecordArray> resp = getPrivacyUnsafeUserEmailBulkWithHttpInfo(accountId);
        return resp.getData();
    }

    /**
     * Get user email addresses in batch
     * Returns user email addresses for a set of accountIds. This API is only available to apps approved by Atlassian, according to these [guidelines](https://community.developer.atlassian.com/t/guidelines-for-requesting-access-to-email-address/27603).  Any accounts which are not available will not be included in the result.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     * @param accountId The account IDs of the users. (required)
     * @return ApiResponse&lt;AccountIdEmailRecordArray&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<AccountIdEmailRecordArray> getPrivacyUnsafeUserEmailBulkWithHttpInfo(List<String> accountId) throws ApiException {
        com.squareup.okhttp.Call call = getPrivacyUnsafeUserEmailBulkValidateBeforeCall(accountId, null, null);
        Type localVarReturnType = new TypeToken<AccountIdEmailRecordArray>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get user email addresses in batch (asynchronously)
     * Returns user email addresses for a set of accountIds. This API is only available to apps approved by Atlassian, according to these [guidelines](https://community.developer.atlassian.com/t/guidelines-for-requesting-access-to-email-address/27603).  Any accounts which are not available will not be included in the result.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     * @param accountId The account IDs of the users. (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getPrivacyUnsafeUserEmailBulkAsync(List<String> accountId, final ApiCallback<AccountIdEmailRecordArray> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getPrivacyUnsafeUserEmailBulkValidateBeforeCall(accountId, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<AccountIdEmailRecordArray>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getUser
     * @param accountId The account ID of the user. The accountId uniquely identifies the user across all Atlassian products. For example, &#x60;384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192&#x60;. (required)
     * @param expand A multi-value parameter indicating which properties of the user to expand.    - &#x60;operations&#x60; returns the operations that the user is allowed to do.   - personalSpace returns the user&#x27;s personal space, if it exists.   - &#x60;isExternalCollaborator&#x60; returns whether the user is an external collaborator user (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getUserCall(String accountId, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/wiki/rest/api/user";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (accountId != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("accountId", accountId));
        if (expand != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("csv", "expand", expand));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "basicAuth", "oAuthDefinitions" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getUserValidateBeforeCall(String accountId, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'accountId' is set
        if (accountId == null) {
            throw new ApiException("Missing the required parameter 'accountId' when calling getUser(Async)");
        }
        
        com.squareup.okhttp.Call call = getUserCall(accountId, expand, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get user
     * Returns a user. This includes information about the user, such as the display name, account ID, profile picture, and more. The information returned may be restricted by the user&#x27;s profile visibility settings.  **Note:** to add, edit, or delete users in your organization, see the [user management REST API](/cloud/admin/user-management/about/).  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     * @param accountId The account ID of the user. The accountId uniquely identifies the user across all Atlassian products. For example, &#x60;384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192&#x60;. (required)
     * @param expand A multi-value parameter indicating which properties of the user to expand.    - &#x60;operations&#x60; returns the operations that the user is allowed to do.   - personalSpace returns the user&#x27;s personal space, if it exists.   - &#x60;isExternalCollaborator&#x60; returns whether the user is an external collaborator user (optional)
     * @return User
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public User getUser(String accountId, List<String> expand) throws ApiException {
        ApiResponse<User> resp = getUserWithHttpInfo(accountId, expand);
        return resp.getData();
    }

    /**
     * Get user
     * Returns a user. This includes information about the user, such as the display name, account ID, profile picture, and more. The information returned may be restricted by the user&#x27;s profile visibility settings.  **Note:** to add, edit, or delete users in your organization, see the [user management REST API](/cloud/admin/user-management/about/).  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     * @param accountId The account ID of the user. The accountId uniquely identifies the user across all Atlassian products. For example, &#x60;384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192&#x60;. (required)
     * @param expand A multi-value parameter indicating which properties of the user to expand.    - &#x60;operations&#x60; returns the operations that the user is allowed to do.   - personalSpace returns the user&#x27;s personal space, if it exists.   - &#x60;isExternalCollaborator&#x60; returns whether the user is an external collaborator user (optional)
     * @return ApiResponse&lt;User&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<User> getUserWithHttpInfo(String accountId, List<String> expand) throws ApiException {
        com.squareup.okhttp.Call call = getUserValidateBeforeCall(accountId, expand, null, null);
        Type localVarReturnType = new TypeToken<User>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get user (asynchronously)
     * Returns a user. This includes information about the user, such as the display name, account ID, profile picture, and more. The information returned may be restricted by the user&#x27;s profile visibility settings.  **Note:** to add, edit, or delete users in your organization, see the [user management REST API](/cloud/admin/user-management/about/).  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     * @param accountId The account ID of the user. The accountId uniquely identifies the user across all Atlassian products. For example, &#x60;384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192&#x60;. (required)
     * @param expand A multi-value parameter indicating which properties of the user to expand.    - &#x60;operations&#x60; returns the operations that the user is allowed to do.   - personalSpace returns the user&#x27;s personal space, if it exists.   - &#x60;isExternalCollaborator&#x60; returns whether the user is an external collaborator user (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getUserAsync(String accountId, List<String> expand, final ApiCallback<User> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getUserValidateBeforeCall(accountId, expand, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<User>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
