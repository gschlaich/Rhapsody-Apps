/*
 * The Confluence Cloud REST API
 * This document describes the REST API and resources provided by Confluence. The REST APIs are for developers who want to integrate Confluence into their application and for administrators who want to script interactions with the Confluence server.Confluence's REST APIs provide access to resources (data entities) via URI paths. To use a REST API, your application will make an HTTP request and parse the response. The response format is JSON. Your methods will be the standard HTTP methods like GET, PUT, POST and DELETE. Because the REST API is based on open standards, you can use any web development language to access the API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiCallback;
import io.swagger.client.ApiClient;
import io.swagger.client.ApiException;
import io.swagger.client.ApiResponse;
import io.swagger.client.Configuration;
import io.swagger.client.Pair;
import io.swagger.client.ProgressRequestBody;
import io.swagger.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import io.swagger.client.model.Version;
import io.swagger.client.model.VersionArray;
import io.swagger.client.model.VersionRestore;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ContentVersionsApi {
    private ApiClient apiClient;

    public ContentVersionsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ContentVersionsApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for deleteContentVersion
     * @param id The ID of the content that the version will be deleted from. (required)
     * @param versionNumber The number of the version to be deleted. The version number starts from 1 up to current version. (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call deleteContentVersionCall(String id, Integer versionNumber, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/wiki/rest/api/content/{id}/version/{versionNumber}"
            .replaceAll("\\{" + "id" + "\\}", apiClient.escapeString(id.toString()))
            .replaceAll("\\{" + "versionNumber" + "\\}", apiClient.escapeString(versionNumber.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "basicAuth", "oAuthDefinitions" };
        return apiClient.buildCall(localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call deleteContentVersionValidateBeforeCall(String id, Integer versionNumber, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling deleteContentVersion(Async)");
        }
        // verify the required parameter 'versionNumber' is set
        if (versionNumber == null) {
            throw new ApiException("Missing the required parameter 'versionNumber' when calling deleteContentVersion(Async)");
        }
        
        com.squareup.okhttp.Call call = deleteContentVersionCall(id, versionNumber, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Delete content version
     * Delete a historical version. This does not delete the changes made to the content in that version, rather the changes for the deleted version are rolled up into the next version. Note, you cannot delete the current version.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to update the content.
     * @param id The ID of the content that the version will be deleted from. (required)
     * @param versionNumber The number of the version to be deleted. The version number starts from 1 up to current version. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void deleteContentVersion(String id, Integer versionNumber) throws ApiException {
        deleteContentVersionWithHttpInfo(id, versionNumber);
    }

    /**
     * Delete content version
     * Delete a historical version. This does not delete the changes made to the content in that version, rather the changes for the deleted version are rolled up into the next version. Note, you cannot delete the current version.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to update the content.
     * @param id The ID of the content that the version will be deleted from. (required)
     * @param versionNumber The number of the version to be deleted. The version number starts from 1 up to current version. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> deleteContentVersionWithHttpInfo(String id, Integer versionNumber) throws ApiException {
        com.squareup.okhttp.Call call = deleteContentVersionValidateBeforeCall(id, versionNumber, null, null);
        return apiClient.execute(call);
    }

    /**
     * Delete content version (asynchronously)
     * Delete a historical version. This does not delete the changes made to the content in that version, rather the changes for the deleted version are rolled up into the next version. Note, you cannot delete the current version.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to update the content.
     * @param id The ID of the content that the version will be deleted from. (required)
     * @param versionNumber The number of the version to be deleted. The version number starts from 1 up to current version. (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call deleteContentVersionAsync(String id, Integer versionNumber, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = deleteContentVersionValidateBeforeCall(id, versionNumber, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /**
     * Build call for getContentVersion
     * @param id The ID of the content to be queried for its version. (required)
     * @param versionNumber The number of the version to be retrieved. (required)
     * @param expand A multi-value parameter indicating which properties of the content to expand. By default, the &#x60;content&#x60; object is expanded.  - &#x60;collaborators&#x60; returns the users that collaborated on the version. - &#x60;content&#x60; returns the content for the version. (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getContentVersionCall(String id, Integer versionNumber, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/wiki/rest/api/content/{id}/version/{versionNumber}"
            .replaceAll("\\{" + "id" + "\\}", apiClient.escapeString(id.toString()))
            .replaceAll("\\{" + "versionNumber" + "\\}", apiClient.escapeString(versionNumber.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (expand != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("csv", "expand", expand));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "basicAuth", "oAuthDefinitions" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getContentVersionValidateBeforeCall(String id, Integer versionNumber, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling getContentVersion(Async)");
        }
        // verify the required parameter 'versionNumber' is set
        if (versionNumber == null) {
            throw new ApiException("Missing the required parameter 'versionNumber' when calling getContentVersion(Async)");
        }
        
        com.squareup.okhttp.Call call = getContentVersionCall(id, versionNumber, expand, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get content version
     * Deprecated, use [Confluence&#x27;s v2 API](https://developer.atlassian.com/cloud/confluence/rest/v2/intro/).  Returns a version for a piece of content.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to view the content. If the content is a blog post, &#x27;View&#x27; permission for the space is required.
     * @param id The ID of the content to be queried for its version. (required)
     * @param versionNumber The number of the version to be retrieved. (required)
     * @param expand A multi-value parameter indicating which properties of the content to expand. By default, the &#x60;content&#x60; object is expanded.  - &#x60;collaborators&#x60; returns the users that collaborated on the version. - &#x60;content&#x60; returns the content for the version. (optional)
     * @return Version
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Version getContentVersion(String id, Integer versionNumber, List<String> expand) throws ApiException {
        ApiResponse<Version> resp = getContentVersionWithHttpInfo(id, versionNumber, expand);
        return resp.getData();
    }

    /**
     * Get content version
     * Deprecated, use [Confluence&#x27;s v2 API](https://developer.atlassian.com/cloud/confluence/rest/v2/intro/).  Returns a version for a piece of content.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to view the content. If the content is a blog post, &#x27;View&#x27; permission for the space is required.
     * @param id The ID of the content to be queried for its version. (required)
     * @param versionNumber The number of the version to be retrieved. (required)
     * @param expand A multi-value parameter indicating which properties of the content to expand. By default, the &#x60;content&#x60; object is expanded.  - &#x60;collaborators&#x60; returns the users that collaborated on the version. - &#x60;content&#x60; returns the content for the version. (optional)
     * @return ApiResponse&lt;Version&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Version> getContentVersionWithHttpInfo(String id, Integer versionNumber, List<String> expand) throws ApiException {
        com.squareup.okhttp.Call call = getContentVersionValidateBeforeCall(id, versionNumber, expand, null, null);
        Type localVarReturnType = new TypeToken<Version>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get content version (asynchronously)
     * Deprecated, use [Confluence&#x27;s v2 API](https://developer.atlassian.com/cloud/confluence/rest/v2/intro/).  Returns a version for a piece of content.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to view the content. If the content is a blog post, &#x27;View&#x27; permission for the space is required.
     * @param id The ID of the content to be queried for its version. (required)
     * @param versionNumber The number of the version to be retrieved. (required)
     * @param expand A multi-value parameter indicating which properties of the content to expand. By default, the &#x60;content&#x60; object is expanded.  - &#x60;collaborators&#x60; returns the users that collaborated on the version. - &#x60;content&#x60; returns the content for the version. (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getContentVersionAsync(String id, Integer versionNumber, List<String> expand, final ApiCallback<Version> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getContentVersionValidateBeforeCall(id, versionNumber, expand, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Version>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getContentVersions
     * @param id The ID of the content to be queried for its versions. (required)
     * @param start The starting index of the returned versions. (optional, default to 0)
     * @param limit The maximum number of versions to return per page. Note, this may be restricted by fixed system limits. (optional, default to 200)
     * @param expand A multi-value parameter indicating which properties of the content to expand. By default, the &#x60;content&#x60; object is expanded.  - &#x60;collaborators&#x60; returns the users that collaborated on the version. - &#x60;content&#x60; returns the content for the version. (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getContentVersionsCall(String id, Integer start, Integer limit, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/wiki/rest/api/content/{id}/version"
            .replaceAll("\\{" + "id" + "\\}", apiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (start != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("start", start));
        if (limit != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("limit", limit));
        if (expand != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("csv", "expand", expand));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "basicAuth", "oAuthDefinitions" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getContentVersionsValidateBeforeCall(String id, Integer start, Integer limit, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling getContentVersions(Async)");
        }
        
        com.squareup.okhttp.Call call = getContentVersionsCall(id, start, limit, expand, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get content versions
     * Deprecated, use [Confluence&#x27;s v2 API](https://developer.atlassian.com/cloud/confluence/rest/v2/intro/).  Returns the versions for a piece of content in descending order.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to view the content. If the content is a blog post, &#x27;View&#x27; permission for the space is required.
     * @param id The ID of the content to be queried for its versions. (required)
     * @param start The starting index of the returned versions. (optional, default to 0)
     * @param limit The maximum number of versions to return per page. Note, this may be restricted by fixed system limits. (optional, default to 200)
     * @param expand A multi-value parameter indicating which properties of the content to expand. By default, the &#x60;content&#x60; object is expanded.  - &#x60;collaborators&#x60; returns the users that collaborated on the version. - &#x60;content&#x60; returns the content for the version. (optional)
     * @return VersionArray
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public VersionArray getContentVersions(String id, Integer start, Integer limit, List<String> expand) throws ApiException {
        ApiResponse<VersionArray> resp = getContentVersionsWithHttpInfo(id, start, limit, expand);
        return resp.getData();
    }

    /**
     * Get content versions
     * Deprecated, use [Confluence&#x27;s v2 API](https://developer.atlassian.com/cloud/confluence/rest/v2/intro/).  Returns the versions for a piece of content in descending order.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to view the content. If the content is a blog post, &#x27;View&#x27; permission for the space is required.
     * @param id The ID of the content to be queried for its versions. (required)
     * @param start The starting index of the returned versions. (optional, default to 0)
     * @param limit The maximum number of versions to return per page. Note, this may be restricted by fixed system limits. (optional, default to 200)
     * @param expand A multi-value parameter indicating which properties of the content to expand. By default, the &#x60;content&#x60; object is expanded.  - &#x60;collaborators&#x60; returns the users that collaborated on the version. - &#x60;content&#x60; returns the content for the version. (optional)
     * @return ApiResponse&lt;VersionArray&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<VersionArray> getContentVersionsWithHttpInfo(String id, Integer start, Integer limit, List<String> expand) throws ApiException {
        com.squareup.okhttp.Call call = getContentVersionsValidateBeforeCall(id, start, limit, expand, null, null);
        Type localVarReturnType = new TypeToken<VersionArray>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get content versions (asynchronously)
     * Deprecated, use [Confluence&#x27;s v2 API](https://developer.atlassian.com/cloud/confluence/rest/v2/intro/).  Returns the versions for a piece of content in descending order.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to view the content. If the content is a blog post, &#x27;View&#x27; permission for the space is required.
     * @param id The ID of the content to be queried for its versions. (required)
     * @param start The starting index of the returned versions. (optional, default to 0)
     * @param limit The maximum number of versions to return per page. Note, this may be restricted by fixed system limits. (optional, default to 200)
     * @param expand A multi-value parameter indicating which properties of the content to expand. By default, the &#x60;content&#x60; object is expanded.  - &#x60;collaborators&#x60; returns the users that collaborated on the version. - &#x60;content&#x60; returns the content for the version. (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getContentVersionsAsync(String id, Integer start, Integer limit, List<String> expand, final ApiCallback<VersionArray> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getContentVersionsValidateBeforeCall(id, start, limit, expand, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<VersionArray>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for restoreContentVersion
     * @param body The content version to be restored. (required)
     * @param id The ID of the content for which the history will be restored. (required)
     * @param expand A multi-value parameter indicating which properties of the content to expand. By default, the &#x60;content&#x60; object is expanded.  - &#x60;collaborators&#x60; returns the users that collaborated on the version. - &#x60;content&#x60; returns the content for the version. (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call restoreContentVersionCall(VersionRestore body, String id, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/wiki/rest/api/content/{id}/version"
            .replaceAll("\\{" + "id" + "\\}", apiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (expand != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("csv", "expand", expand));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "basicAuth", "oAuthDefinitions" };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call restoreContentVersionValidateBeforeCall(VersionRestore body, String id, List<String> expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling restoreContentVersion(Async)");
        }
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling restoreContentVersion(Async)");
        }
        
        com.squareup.okhttp.Call call = restoreContentVersionCall(body, id, expand, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Restore content version
     * Restores a historical version to be the latest version. That is, a new version is created with the content of the historical version.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to update the content.
     * @param body The content version to be restored. (required)
     * @param id The ID of the content for which the history will be restored. (required)
     * @param expand A multi-value parameter indicating which properties of the content to expand. By default, the &#x60;content&#x60; object is expanded.  - &#x60;collaborators&#x60; returns the users that collaborated on the version. - &#x60;content&#x60; returns the content for the version. (optional)
     * @return Version
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public Version restoreContentVersion(VersionRestore body, String id, List<String> expand) throws ApiException {
        ApiResponse<Version> resp = restoreContentVersionWithHttpInfo(body, id, expand);
        return resp.getData();
    }

    /**
     * Restore content version
     * Restores a historical version to be the latest version. That is, a new version is created with the content of the historical version.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to update the content.
     * @param body The content version to be restored. (required)
     * @param id The ID of the content for which the history will be restored. (required)
     * @param expand A multi-value parameter indicating which properties of the content to expand. By default, the &#x60;content&#x60; object is expanded.  - &#x60;collaborators&#x60; returns the users that collaborated on the version. - &#x60;content&#x60; returns the content for the version. (optional)
     * @return ApiResponse&lt;Version&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Version> restoreContentVersionWithHttpInfo(VersionRestore body, String id, List<String> expand) throws ApiException {
        com.squareup.okhttp.Call call = restoreContentVersionValidateBeforeCall(body, id, expand, null, null);
        Type localVarReturnType = new TypeToken<Version>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Restore content version (asynchronously)
     * Restores a historical version to be the latest version. That is, a new version is created with the content of the historical version.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to update the content.
     * @param body The content version to be restored. (required)
     * @param id The ID of the content for which the history will be restored. (required)
     * @param expand A multi-value parameter indicating which properties of the content to expand. By default, the &#x60;content&#x60; object is expanded.  - &#x60;collaborators&#x60; returns the users that collaborated on the version. - &#x60;content&#x60; returns the content for the version. (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call restoreContentVersionAsync(VersionRestore body, String id, List<String> expand, final ApiCallback<Version> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = restoreContentVersionValidateBeforeCall(body, id, expand, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<Version>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
