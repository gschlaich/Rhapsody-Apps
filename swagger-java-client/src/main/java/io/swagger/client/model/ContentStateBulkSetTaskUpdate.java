/*
 * The Confluence Cloud REST API
 * This document describes the REST API and resources provided by Confluence. The REST APIs are for developers who want to integrate Confluence into their application and for administrators who want to script interactions with the Confluence server.Confluence's REST APIs provide access to resources (data entities) via URI paths. To use a REST API, your application will make an HTTP request and parse the response. The response format is JSON. Your methods will be the standard HTTP methods like GET, PUT, POST and DELETE. Because the REST API is based on open standards, you can use any web development language to access the API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ContentState;
import io.swagger.client.model.ContentStateFailure;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * ContentStateBulkSetTaskUpdate
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-03-29T20:08:21.572793104Z[GMT]")
public class ContentStateBulkSetTaskUpdate {
  @SerializedName("set")
  private List<String> set = new ArrayList<String>();

  @SerializedName("failed")
  private List<ContentStateFailure> failed = new ArrayList<ContentStateFailure>();

  @SerializedName("percentage")
  private Long percentage = null;

  @SerializedName("message")
  private String message = null;

  @SerializedName("state")
  private ContentState state = null;

  @SerializedName("success")
  private Boolean success = null;

  public ContentStateBulkSetTaskUpdate set(List<String> set) {
    this.set = set;
    return this;
  }

  public ContentStateBulkSetTaskUpdate addSetItem(String setItem) {
    this.set.add(setItem);
    return this;
  }

   /**
   * Get set
   * @return set
  **/
  @Schema(required = true, description = "")
  public List<String> getSet() {
    return set;
  }

  public void setSet(List<String> set) {
    this.set = set;
  }

  public ContentStateBulkSetTaskUpdate failed(List<ContentStateFailure> failed) {
    this.failed = failed;
    return this;
  }

  public ContentStateBulkSetTaskUpdate addFailedItem(ContentStateFailure failedItem) {
    this.failed.add(failedItem);
    return this;
  }

   /**
   * Get failed
   * @return failed
  **/
  @Schema(required = true, description = "")
  public List<ContentStateFailure> getFailed() {
    return failed;
  }

  public void setFailed(List<ContentStateFailure> failed) {
    this.failed = failed;
  }

  public ContentStateBulkSetTaskUpdate percentage(Long percentage) {
    this.percentage = percentage;
    return this;
  }

   /**
   * Get percentage
   * @return percentage
  **/
  @Schema(required = true, description = "")
  public Long getPercentage() {
    return percentage;
  }

  public void setPercentage(Long percentage) {
    this.percentage = percentage;
  }

  public ContentStateBulkSetTaskUpdate message(String message) {
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @Schema(description = "")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public ContentStateBulkSetTaskUpdate state(ContentState state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @Schema(description = "")
  public ContentState getState() {
    return state;
  }

  public void setState(ContentState state) {
    this.state = state;
  }

  public ContentStateBulkSetTaskUpdate success(Boolean success) {
    this.success = success;
    return this;
  }

   /**
   * Get success
   * @return success
  **/
  @Schema(required = true, description = "")
  public Boolean isSuccess() {
    return success;
  }

  public void setSuccess(Boolean success) {
    this.success = success;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContentStateBulkSetTaskUpdate contentStateBulkSetTaskUpdate = (ContentStateBulkSetTaskUpdate) o;
    return Objects.equals(this.set, contentStateBulkSetTaskUpdate.set) &&
        Objects.equals(this.failed, contentStateBulkSetTaskUpdate.failed) &&
        Objects.equals(this.percentage, contentStateBulkSetTaskUpdate.percentage) &&
        Objects.equals(this.message, contentStateBulkSetTaskUpdate.message) &&
        Objects.equals(this.state, contentStateBulkSetTaskUpdate.state) &&
        Objects.equals(this.success, contentStateBulkSetTaskUpdate.success);
  }

  @Override
  public int hashCode() {
    return Objects.hash(set, failed, percentage, message, state, success);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContentStateBulkSetTaskUpdate {\n");
    
    sb.append("    set: ").append(toIndentedString(set)).append("\n");
    sb.append("    failed: ").append(toIndentedString(failed)).append("\n");
    sb.append("    percentage: ").append(toIndentedString(percentage)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    success: ").append(toIndentedString(success)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
