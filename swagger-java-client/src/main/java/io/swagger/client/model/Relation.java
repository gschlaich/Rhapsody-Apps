/*
 * The Confluence Cloud REST API
 * This document describes the REST API and resources provided by Confluence. The REST APIs are for developers who want to integrate Confluence into their application and for administrators who want to script interactions with the Confluence server.Confluence's REST APIs provide access to resources (data entities) via URI paths. To use a REST API, your application will make an HTTP request and parse the response. The response format is JSON. Your methods will be the standard HTTP methods like GET, PUT, POST and DELETE. Because the REST API is based on open standards, you can use any web development language to access the API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.GenericLinks;
import io.swagger.client.model.RelationData;
import io.swagger.client.model.RelationExpandable;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Relation
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-03-29T20:08:21.572793104Z[GMT]")
public class Relation {
  @SerializedName("name")
  private String name = null;

  @SerializedName("relationData")
  private RelationData relationData = null;

  @SerializedName("source")
  private OneOfRelationSource source = null;

  @SerializedName("target")
  private OneOfRelationTarget target = null;

  @SerializedName("_expandable")
  private RelationExpandable _expandable = null;

  @SerializedName("_links")
  private GenericLinks _links = null;

  public Relation name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Relation relationData(RelationData relationData) {
    this.relationData = relationData;
    return this;
  }

   /**
   * Get relationData
   * @return relationData
  **/
  @Schema(description = "")
  public RelationData getRelationData() {
    return relationData;
  }

  public void setRelationData(RelationData relationData) {
    this.relationData = relationData;
  }

  public Relation source(OneOfRelationSource source) {
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @Schema(description = "")
  public OneOfRelationSource getSource() {
    return source;
  }

  public void setSource(OneOfRelationSource source) {
    this.source = source;
  }

  public Relation target(OneOfRelationTarget target) {
    this.target = target;
    return this;
  }

   /**
   * Get target
   * @return target
  **/
  @Schema(description = "")
  public OneOfRelationTarget getTarget() {
    return target;
  }

  public void setTarget(OneOfRelationTarget target) {
    this.target = target;
  }

  public Relation _expandable(RelationExpandable _expandable) {
    this._expandable = _expandable;
    return this;
  }

   /**
   * Get _expandable
   * @return _expandable
  **/
  @Schema(description = "")
  public RelationExpandable getExpandable() {
    return _expandable;
  }

  public void setExpandable(RelationExpandable _expandable) {
    this._expandable = _expandable;
  }

  public Relation _links(GenericLinks _links) {
    this._links = _links;
    return this;
  }

   /**
   * Get _links
   * @return _links
  **/
  @Schema(required = true, description = "")
  public GenericLinks getLinks() {
    return _links;
  }

  public void setLinks(GenericLinks _links) {
    this._links = _links;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Relation relation = (Relation) o;
    return Objects.equals(this.name, relation.name) &&
        Objects.equals(this.relationData, relation.relationData) &&
        Objects.equals(this.source, relation.source) &&
        Objects.equals(this.target, relation.target) &&
        Objects.equals(this._expandable, relation._expandable) &&
        Objects.equals(this._links, relation._links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, relationData, source, target, _expandable, _links);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Relation {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    relationData: ").append(toIndentedString(relationData)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    target: ").append(toIndentedString(target)).append("\n");
    sb.append("    _expandable: ").append(toIndentedString(_expandable)).append("\n");
    sb.append("    _links: ").append(toIndentedString(_links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
