/*
 * The Confluence Cloud REST API
 * This document describes the REST API and resources provided by Confluence. The REST APIs are for developers who want to integrate Confluence into their application and for administrators who want to script interactions with the Confluence server.Confluence's REST APIs provide access to resources (data entities) via URI paths. To use a REST API, your application will make an HTTP request and parse the response. The response format is JSON. Your methods will be the standard HTTP methods like GET, PUT, POST and DELETE. Because the REST API is based on open standards, you can use any web development language to access the API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.GenericLinks;
import io.swagger.client.model.PermissionSubject;
import io.swagger.client.model.SpacePermissionV2Operation;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
/**
 * This object represents the request for the single space permission. Permissions consist of at least one operation object with an accompanying subjects object.  The following combinations of &#x60;operation.key&#x60; and &#x60;operation.target&#x60; values are valid for the &#x60;operation&#x60; object: &#x60;&#x60;&#x60; bash &#x27;create&#x27;: &#x27;page&#x27;, &#x27;blogpost&#x27;, &#x27;comment&#x27;, &#x27;attachment&#x27; &#x27;read&#x27;: &#x27;space&#x27; &#x27;delete&#x27;: &#x27;page&#x27;, &#x27;blogpost&#x27;, &#x27;comment&#x27;, &#x27;attachment&#x27;, &#x27;space&#x27; &#x27;export&#x27;: &#x27;space&#x27; &#x27;administer&#x27;: &#x27;space&#x27; &#x27;archive&#x27;: &#x27;page&#x27; &#x27;restrict_content&#x27;: &#x27;space&#x27; &#x60;&#x60;&#x60;  For example, to enable Delete Own permission, set the &#x60;operation&#x60; object to the following: &#x60;&#x60;&#x60; \&quot;operation\&quot;: {     \&quot;key\&quot;: \&quot;delete\&quot;,     \&quot;target\&quot;: \&quot;space\&quot; } &#x60;&#x60;&#x60; To enable Add/Delete Restrictions permissions, set the &#x60;operation&#x60; object to the following: &#x60;&#x60;&#x60; \&quot;operation\&quot;: {     \&quot;key\&quot;: \&quot;restrict_content\&quot;,     \&quot;target\&quot;: \&quot;space\&quot; } &#x60;&#x60;&#x60;
 */
@Schema(description = "This object represents the request for the single space permission. Permissions consist of at least one operation object with an accompanying subjects object.  The following combinations of `operation.key` and `operation.target` values are valid for the `operation` object: ``` bash 'create': 'page', 'blogpost', 'comment', 'attachment' 'read': 'space' 'delete': 'page', 'blogpost', 'comment', 'attachment', 'space' 'export': 'space' 'administer': 'space' 'archive': 'page' 'restrict_content': 'space' ```  For example, to enable Delete Own permission, set the `operation` object to the following: ``` \"operation\": {     \"key\": \"delete\",     \"target\": \"space\" } ``` To enable Add/Delete Restrictions permissions, set the `operation` object to the following: ``` \"operation\": {     \"key\": \"restrict_content\",     \"target\": \"space\" } ```")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-03-29T20:08:21.572793104Z[GMT]")
public class SpacePermissionRequest extends HashMap<String, Object> {
  @SerializedName("subject")
  private PermissionSubject subject = null;

  @SerializedName("operation")
  private SpacePermissionV2Operation operation = null;

  @SerializedName("_links")
  private GenericLinks _links = null;

  public SpacePermissionRequest subject(PermissionSubject subject) {
    this.subject = subject;
    return this;
  }

   /**
   * Get subject
   * @return subject
  **/
  @Schema(required = true, description = "")
  public PermissionSubject getSubject() {
    return subject;
  }

  public void setSubject(PermissionSubject subject) {
    this.subject = subject;
  }

  public SpacePermissionRequest operation(SpacePermissionV2Operation operation) {
    this.operation = operation;
    return this;
  }

   /**
   * Get operation
   * @return operation
  **/
  @Schema(required = true, description = "")
  public SpacePermissionV2Operation getOperation() {
    return operation;
  }

  public void setOperation(SpacePermissionV2Operation operation) {
    this.operation = operation;
  }

  public SpacePermissionRequest _links(GenericLinks _links) {
    this._links = _links;
    return this;
  }

   /**
   * Get _links
   * @return _links
  **/
  @Schema(description = "")
  public GenericLinks getLinks() {
    return _links;
  }

  public void setLinks(GenericLinks _links) {
    this._links = _links;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SpacePermissionRequest spacePermissionRequest = (SpacePermissionRequest) o;
    return Objects.equals(this.subject, spacePermissionRequest.subject) &&
        Objects.equals(this.operation, spacePermissionRequest.operation) &&
        Objects.equals(this._links, spacePermissionRequest._links) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(subject, operation, _links, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SpacePermissionRequest {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
    sb.append("    _links: ").append(toIndentedString(_links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
