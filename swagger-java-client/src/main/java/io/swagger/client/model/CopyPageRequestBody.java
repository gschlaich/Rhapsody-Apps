/*
 * The Confluence Cloud REST API
 * This document describes the REST API and resources provided by Confluence. The REST APIs are for developers who want to integrate Confluence into their application and for administrators who want to script interactions with the Confluence server.Confluence's REST APIs provide access to resources (data entities) via URI paths. To use a REST API, your application will make an HTTP request and parse the response. The response format is JSON. Your methods will be the standard HTTP methods like GET, PUT, POST and DELETE. Because the REST API is based on open standards, you can use any web development language to access the API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ContentBodyCreate;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * If defined, this will replace the body of the destination page.
 */
@Schema(description = "If defined, this will replace the body of the destination page.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-03-29T20:08:21.572793104Z[GMT]")
public class CopyPageRequestBody {
  @SerializedName("storage")
  private ContentBodyCreate storage = null;

  @SerializedName("editor2")
  private ContentBodyCreate editor2 = null;

  public CopyPageRequestBody storage(ContentBodyCreate storage) {
    this.storage = storage;
    return this;
  }

   /**
   * Get storage
   * @return storage
  **/
  @Schema(description = "")
  public ContentBodyCreate getStorage() {
    return storage;
  }

  public void setStorage(ContentBodyCreate storage) {
    this.storage = storage;
  }

  public CopyPageRequestBody editor2(ContentBodyCreate editor2) {
    this.editor2 = editor2;
    return this;
  }

   /**
   * Get editor2
   * @return editor2
  **/
  @Schema(description = "")
  public ContentBodyCreate getEditor2() {
    return editor2;
  }

  public void setEditor2(ContentBodyCreate editor2) {
    this.editor2 = editor2;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CopyPageRequestBody copyPageRequestBody = (CopyPageRequestBody) o;
    return Objects.equals(this.storage, copyPageRequestBody.storage) &&
        Objects.equals(this.editor2, copyPageRequestBody.editor2);
  }

  @Override
  public int hashCode() {
    return Objects.hash(storage, editor2);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CopyPageRequestBody {\n");
    
    sb.append("    storage: ").append(toIndentedString(storage)).append("\n");
    sb.append("    editor2: ").append(toIndentedString(editor2)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
