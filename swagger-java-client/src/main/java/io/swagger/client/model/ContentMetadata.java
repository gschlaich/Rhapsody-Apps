/*
 * The Confluence Cloud REST API
 * This document describes the REST API and resources provided by Confluence. The REST APIs are for developers who want to integrate Confluence into their application and for administrators who want to script interactions with the Confluence server.Confluence's REST APIs provide access to resources (data entities) via URI paths. To use a REST API, your application will make an HTTP request and parse the response. The response format is JSON. Your methods will be the standard HTTP methods like GET, PUT, POST and DELETE. Because the REST API is based on open standards, you can use any web development language to access the API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ContentMetadataCurrentuser;
import io.swagger.client.model.GenericLinks;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
/**
 * Metadata object for page, blogpost, comment content
 */
@Schema(description = "Metadata object for page, blogpost, comment content")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-03-29T20:08:21.572793104Z[GMT]")
public class ContentMetadata extends HashMap<String, Object> {
  @SerializedName("currentuser")
  private ContentMetadataCurrentuser currentuser = null;

  @SerializedName("properties")
  private GenericLinks properties = null;

  @SerializedName("frontend")
  private Map<String, Object> frontend = null;

  @SerializedName("labels")
  private OneOfContentMetadataLabels labels = null;

  public ContentMetadata currentuser(ContentMetadataCurrentuser currentuser) {
    this.currentuser = currentuser;
    return this;
  }

   /**
   * Get currentuser
   * @return currentuser
  **/
  @Schema(description = "")
  public ContentMetadataCurrentuser getCurrentuser() {
    return currentuser;
  }

  public void setCurrentuser(ContentMetadataCurrentuser currentuser) {
    this.currentuser = currentuser;
  }

  public ContentMetadata properties(GenericLinks properties) {
    this.properties = properties;
    return this;
  }

   /**
   * Get properties
   * @return properties
  **/
  @Schema(description = "")
  public GenericLinks getProperties() {
    return properties;
  }

  public void setProperties(GenericLinks properties) {
    this.properties = properties;
  }

  public ContentMetadata frontend(Map<String, Object> frontend) {
    this.frontend = frontend;
    return this;
  }

  public ContentMetadata putFrontendItem(String key, Object frontendItem) {
    if (this.frontend == null) {
      this.frontend = new HashMap<String, Object>();
    }
    this.frontend.put(key, frontendItem);
    return this;
  }

   /**
   * Get frontend
   * @return frontend
  **/
  @Schema(description = "")
  public Map<String, Object> getFrontend() {
    return frontend;
  }

  public void setFrontend(Map<String, Object> frontend) {
    this.frontend = frontend;
  }

  public ContentMetadata labels(OneOfContentMetadataLabels labels) {
    this.labels = labels;
    return this;
  }

   /**
   * Get labels
   * @return labels
  **/
  @Schema(description = "")
  public OneOfContentMetadataLabels getLabels() {
    return labels;
  }

  public void setLabels(OneOfContentMetadataLabels labels) {
    this.labels = labels;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContentMetadata contentMetadata = (ContentMetadata) o;
    return Objects.equals(this.currentuser, contentMetadata.currentuser) &&
        Objects.equals(this.properties, contentMetadata.properties) &&
        Objects.equals(this.frontend, contentMetadata.frontend) &&
        Objects.equals(this.labels, contentMetadata.labels) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currentuser, properties, frontend, labels, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContentMetadata {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    currentuser: ").append(toIndentedString(currentuser)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    frontend: ").append(toIndentedString(frontend)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
