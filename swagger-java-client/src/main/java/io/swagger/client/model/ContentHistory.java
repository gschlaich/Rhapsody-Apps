/*
 * The Confluence Cloud REST API
 * This document describes the REST API and resources provided by Confluence. The REST APIs are for developers who want to integrate Confluence into their application and for administrators who want to script interactions with the Confluence server.Confluence's REST APIs provide access to resources (data entities) via URI paths. To use a REST API, your application will make an HTTP request and parse the response. The response format is JSON. Your methods will be the standard HTTP methods like GET, PUT, POST and DELETE. Because the REST API is based on open standards, you can use any web development language to access the API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ContentHistoryContributors;
import io.swagger.client.model.ContentHistoryExpandable;
import io.swagger.client.model.GenericLinks;
import io.swagger.client.model.User;
import io.swagger.client.model.Version;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * ContentHistory
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-03-29T20:08:21.572793104Z[GMT]")
public class ContentHistory {
  @SerializedName("latest")
  private Boolean latest = null;

  @SerializedName("createdBy")
  private User createdBy = null;

  @SerializedName("ownedBy")
  private User ownedBy = null;

  @SerializedName("createdDate")
  private OffsetDateTime createdDate = null;

  @SerializedName("lastUpdated")
  private Version lastUpdated = null;

  @SerializedName("previousVersion")
  private Version previousVersion = null;

  @SerializedName("contributors")
  private ContentHistoryContributors contributors = null;

  @SerializedName("nextVersion")
  private Version nextVersion = null;

  @SerializedName("_expandable")
  private ContentHistoryExpandable _expandable = null;

  @SerializedName("_links")
  private GenericLinks _links = null;

  public ContentHistory latest(Boolean latest) {
    this.latest = latest;
    return this;
  }

   /**
   * Get latest
   * @return latest
  **/
  @Schema(required = true, description = "")
  public Boolean isLatest() {
    return latest;
  }

  public void setLatest(Boolean latest) {
    this.latest = latest;
  }

  public ContentHistory createdBy(User createdBy) {
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @Schema(description = "")
  public User getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(User createdBy) {
    this.createdBy = createdBy;
  }

  public ContentHistory ownedBy(User ownedBy) {
    this.ownedBy = ownedBy;
    return this;
  }

   /**
   * Get ownedBy
   * @return ownedBy
  **/
  @Schema(description = "")
  public User getOwnedBy() {
    return ownedBy;
  }

  public void setOwnedBy(User ownedBy) {
    this.ownedBy = ownedBy;
  }

  public ContentHistory createdDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
    return this;
  }

   /**
   * Get createdDate
   * @return createdDate
  **/
  @Schema(description = "")
  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }

  public ContentHistory lastUpdated(Version lastUpdated) {
    this.lastUpdated = lastUpdated;
    return this;
  }

   /**
   * Get lastUpdated
   * @return lastUpdated
  **/
  @Schema(description = "")
  public Version getLastUpdated() {
    return lastUpdated;
  }

  public void setLastUpdated(Version lastUpdated) {
    this.lastUpdated = lastUpdated;
  }

  public ContentHistory previousVersion(Version previousVersion) {
    this.previousVersion = previousVersion;
    return this;
  }

   /**
   * Get previousVersion
   * @return previousVersion
  **/
  @Schema(description = "")
  public Version getPreviousVersion() {
    return previousVersion;
  }

  public void setPreviousVersion(Version previousVersion) {
    this.previousVersion = previousVersion;
  }

  public ContentHistory contributors(ContentHistoryContributors contributors) {
    this.contributors = contributors;
    return this;
  }

   /**
   * Get contributors
   * @return contributors
  **/
  @Schema(description = "")
  public ContentHistoryContributors getContributors() {
    return contributors;
  }

  public void setContributors(ContentHistoryContributors contributors) {
    this.contributors = contributors;
  }

  public ContentHistory nextVersion(Version nextVersion) {
    this.nextVersion = nextVersion;
    return this;
  }

   /**
   * Get nextVersion
   * @return nextVersion
  **/
  @Schema(description = "")
  public Version getNextVersion() {
    return nextVersion;
  }

  public void setNextVersion(Version nextVersion) {
    this.nextVersion = nextVersion;
  }

  public ContentHistory _expandable(ContentHistoryExpandable _expandable) {
    this._expandable = _expandable;
    return this;
  }

   /**
   * Get _expandable
   * @return _expandable
  **/
  @Schema(description = "")
  public ContentHistoryExpandable getExpandable() {
    return _expandable;
  }

  public void setExpandable(ContentHistoryExpandable _expandable) {
    this._expandable = _expandable;
  }

  public ContentHistory _links(GenericLinks _links) {
    this._links = _links;
    return this;
  }

   /**
   * Get _links
   * @return _links
  **/
  @Schema(description = "")
  public GenericLinks getLinks() {
    return _links;
  }

  public void setLinks(GenericLinks _links) {
    this._links = _links;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContentHistory contentHistory = (ContentHistory) o;
    return Objects.equals(this.latest, contentHistory.latest) &&
        Objects.equals(this.createdBy, contentHistory.createdBy) &&
        Objects.equals(this.ownedBy, contentHistory.ownedBy) &&
        Objects.equals(this.createdDate, contentHistory.createdDate) &&
        Objects.equals(this.lastUpdated, contentHistory.lastUpdated) &&
        Objects.equals(this.previousVersion, contentHistory.previousVersion) &&
        Objects.equals(this.contributors, contentHistory.contributors) &&
        Objects.equals(this.nextVersion, contentHistory.nextVersion) &&
        Objects.equals(this._expandable, contentHistory._expandable) &&
        Objects.equals(this._links, contentHistory._links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(latest, createdBy, ownedBy, createdDate, lastUpdated, previousVersion, contributors, nextVersion, _expandable, _links);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContentHistory {\n");
    
    sb.append("    latest: ").append(toIndentedString(latest)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    ownedBy: ").append(toIndentedString(ownedBy)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("    previousVersion: ").append(toIndentedString(previousVersion)).append("\n");
    sb.append("    contributors: ").append(toIndentedString(contributors)).append("\n");
    sb.append("    nextVersion: ").append(toIndentedString(nextVersion)).append("\n");
    sb.append("    _expandable: ").append(toIndentedString(_expandable)).append("\n");
    sb.append("    _links: ").append(toIndentedString(_links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
