/*
 * The Confluence Cloud REST API
 * This document describes the REST API and resources provided by Confluence. The REST APIs are for developers who want to integrate Confluence into their application and for administrators who want to script interactions with the Confluence server.Confluence's REST APIs provide access to resources (data entities) via URI paths. To use a REST API, your application will make an HTTP request and parse the response. The response format is JSON. Your methods will be the standard HTTP methods like GET, PUT, POST and DELETE. Because the REST API is based on open standards, you can use any web development language to access the API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.AffectedObject;
import io.swagger.client.model.AuditRecordAuthor;
import io.swagger.client.model.ChangedValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * AuditRecord
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-03-29T20:08:21.572793104Z[GMT]")
public class AuditRecord {
  @SerializedName("author")
  private AuditRecordAuthor author = null;

  @SerializedName("remoteAddress")
  private String remoteAddress = null;

  @SerializedName("creationDate")
  private Long creationDate = null;

  @SerializedName("summary")
  private String summary = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("category")
  private String category = null;

  @SerializedName("sysAdmin")
  private Boolean sysAdmin = null;

  @SerializedName("superAdmin")
  private Boolean superAdmin = null;

  @SerializedName("affectedObject")
  private AffectedObject affectedObject = null;

  @SerializedName("changedValues")
  private List<ChangedValue> changedValues = new ArrayList<ChangedValue>();

  @SerializedName("associatedObjects")
  private List<AffectedObject> associatedObjects = new ArrayList<AffectedObject>();

  public AuditRecord author(AuditRecordAuthor author) {
    this.author = author;
    return this;
  }

   /**
   * Get author
   * @return author
  **/
  @Schema(required = true, description = "")
  public AuditRecordAuthor getAuthor() {
    return author;
  }

  public void setAuthor(AuditRecordAuthor author) {
    this.author = author;
  }

  public AuditRecord remoteAddress(String remoteAddress) {
    this.remoteAddress = remoteAddress;
    return this;
  }

   /**
   * Get remoteAddress
   * @return remoteAddress
  **/
  @Schema(required = true, description = "")
  public String getRemoteAddress() {
    return remoteAddress;
  }

  public void setRemoteAddress(String remoteAddress) {
    this.remoteAddress = remoteAddress;
  }

  public AuditRecord creationDate(Long creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * The creation date-time of the audit record, as a timestamp.
   * @return creationDate
  **/
  @Schema(required = true, description = "The creation date-time of the audit record, as a timestamp.")
  public Long getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(Long creationDate) {
    this.creationDate = creationDate;
  }

  public AuditRecord summary(String summary) {
    this.summary = summary;
    return this;
  }

   /**
   * Get summary
   * @return summary
  **/
  @Schema(required = true, description = "")
  public String getSummary() {
    return summary;
  }

  public void setSummary(String summary) {
    this.summary = summary;
  }

  public AuditRecord description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(required = true, description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public AuditRecord category(String category) {
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @Schema(required = true, description = "")
  public String getCategory() {
    return category;
  }

  public void setCategory(String category) {
    this.category = category;
  }

  public AuditRecord sysAdmin(Boolean sysAdmin) {
    this.sysAdmin = sysAdmin;
    return this;
  }

   /**
   * Get sysAdmin
   * @return sysAdmin
  **/
  @Schema(required = true, description = "")
  public Boolean isSysAdmin() {
    return sysAdmin;
  }

  public void setSysAdmin(Boolean sysAdmin) {
    this.sysAdmin = sysAdmin;
  }

  public AuditRecord superAdmin(Boolean superAdmin) {
    this.superAdmin = superAdmin;
    return this;
  }

   /**
   * Get superAdmin
   * @return superAdmin
  **/
  @Schema(description = "")
  public Boolean isSuperAdmin() {
    return superAdmin;
  }

  public void setSuperAdmin(Boolean superAdmin) {
    this.superAdmin = superAdmin;
  }

  public AuditRecord affectedObject(AffectedObject affectedObject) {
    this.affectedObject = affectedObject;
    return this;
  }

   /**
   * Get affectedObject
   * @return affectedObject
  **/
  @Schema(required = true, description = "")
  public AffectedObject getAffectedObject() {
    return affectedObject;
  }

  public void setAffectedObject(AffectedObject affectedObject) {
    this.affectedObject = affectedObject;
  }

  public AuditRecord changedValues(List<ChangedValue> changedValues) {
    this.changedValues = changedValues;
    return this;
  }

  public AuditRecord addChangedValuesItem(ChangedValue changedValuesItem) {
    this.changedValues.add(changedValuesItem);
    return this;
  }

   /**
   * Get changedValues
   * @return changedValues
  **/
  @Schema(required = true, description = "")
  public List<ChangedValue> getChangedValues() {
    return changedValues;
  }

  public void setChangedValues(List<ChangedValue> changedValues) {
    this.changedValues = changedValues;
  }

  public AuditRecord associatedObjects(List<AffectedObject> associatedObjects) {
    this.associatedObjects = associatedObjects;
    return this;
  }

  public AuditRecord addAssociatedObjectsItem(AffectedObject associatedObjectsItem) {
    this.associatedObjects.add(associatedObjectsItem);
    return this;
  }

   /**
   * Get associatedObjects
   * @return associatedObjects
  **/
  @Schema(required = true, description = "")
  public List<AffectedObject> getAssociatedObjects() {
    return associatedObjects;
  }

  public void setAssociatedObjects(List<AffectedObject> associatedObjects) {
    this.associatedObjects = associatedObjects;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuditRecord auditRecord = (AuditRecord) o;
    return Objects.equals(this.author, auditRecord.author) &&
        Objects.equals(this.remoteAddress, auditRecord.remoteAddress) &&
        Objects.equals(this.creationDate, auditRecord.creationDate) &&
        Objects.equals(this.summary, auditRecord.summary) &&
        Objects.equals(this.description, auditRecord.description) &&
        Objects.equals(this.category, auditRecord.category) &&
        Objects.equals(this.sysAdmin, auditRecord.sysAdmin) &&
        Objects.equals(this.superAdmin, auditRecord.superAdmin) &&
        Objects.equals(this.affectedObject, auditRecord.affectedObject) &&
        Objects.equals(this.changedValues, auditRecord.changedValues) &&
        Objects.equals(this.associatedObjects, auditRecord.associatedObjects);
  }

  @Override
  public int hashCode() {
    return Objects.hash(author, remoteAddress, creationDate, summary, description, category, sysAdmin, superAdmin, affectedObject, changedValues, associatedObjects);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuditRecord {\n");
    
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("    remoteAddress: ").append(toIndentedString(remoteAddress)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    summary: ").append(toIndentedString(summary)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    sysAdmin: ").append(toIndentedString(sysAdmin)).append("\n");
    sb.append("    superAdmin: ").append(toIndentedString(superAdmin)).append("\n");
    sb.append("    affectedObject: ").append(toIndentedString(affectedObject)).append("\n");
    sb.append("    changedValues: ").append(toIndentedString(changedValues)).append("\n");
    sb.append("    associatedObjects: ").append(toIndentedString(associatedObjects)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
