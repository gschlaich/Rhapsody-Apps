/*
 * The Confluence Cloud REST API
 * This document describes the REST API and resources provided by Confluence. The REST APIs are for developers who want to integrate Confluence into their application and for administrators who want to script interactions with the Confluence server.Confluence's REST APIs provide access to resources (data entities) via URI paths. To use a REST API, your application will make an HTTP request and parse the response. The response format is JSON. Your methods will be the standard HTTP methods like GET, PUT, POST and DELETE. Because the REST API is based on open standards, you can use any web development language to access the API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.GenericLinks;
import io.swagger.client.model.Icon;
import io.swagger.client.model.OperationCheckResult;
import io.swagger.client.model.UserAnonymousExpandable;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * UserAnonymous
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-03-29T20:08:21.572793104Z[GMT]")
public class UserAnonymous {
  @SerializedName("type")
  private String type = null;

  @SerializedName("profilePicture")
  private Icon profilePicture = null;

  @SerializedName("displayName")
  private String displayName = null;

  @SerializedName("operations")
  private List<OperationCheckResult> operations = null;

  @SerializedName("isExternalCollaborator")
  private Boolean isExternalCollaborator = null;

  @SerializedName("_expandable")
  private UserAnonymousExpandable _expandable = null;

  @SerializedName("_links")
  private GenericLinks _links = null;

  public UserAnonymous type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(required = true, description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public UserAnonymous profilePicture(Icon profilePicture) {
    this.profilePicture = profilePicture;
    return this;
  }

   /**
   * Get profilePicture
   * @return profilePicture
  **/
  @Schema(required = true, description = "")
  public Icon getProfilePicture() {
    return profilePicture;
  }

  public void setProfilePicture(Icon profilePicture) {
    this.profilePicture = profilePicture;
  }

  public UserAnonymous displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * Get displayName
   * @return displayName
  **/
  @Schema(required = true, description = "")
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  public UserAnonymous operations(List<OperationCheckResult> operations) {
    this.operations = operations;
    return this;
  }

  public UserAnonymous addOperationsItem(OperationCheckResult operationsItem) {
    if (this.operations == null) {
      this.operations = new ArrayList<OperationCheckResult>();
    }
    this.operations.add(operationsItem);
    return this;
  }

   /**
   * Get operations
   * @return operations
  **/
  @Schema(description = "")
  public List<OperationCheckResult> getOperations() {
    return operations;
  }

  public void setOperations(List<OperationCheckResult> operations) {
    this.operations = operations;
  }

  public UserAnonymous isExternalCollaborator(Boolean isExternalCollaborator) {
    this.isExternalCollaborator = isExternalCollaborator;
    return this;
  }

   /**
   * Whether the user is an external collaborator user
   * @return isExternalCollaborator
  **/
  @Schema(description = "Whether the user is an external collaborator user")
  public Boolean isIsExternalCollaborator() {
    return isExternalCollaborator;
  }

  public void setIsExternalCollaborator(Boolean isExternalCollaborator) {
    this.isExternalCollaborator = isExternalCollaborator;
  }

  public UserAnonymous _expandable(UserAnonymousExpandable _expandable) {
    this._expandable = _expandable;
    return this;
  }

   /**
   * Get _expandable
   * @return _expandable
  **/
  @Schema(description = "")
  public UserAnonymousExpandable getExpandable() {
    return _expandable;
  }

  public void setExpandable(UserAnonymousExpandable _expandable) {
    this._expandable = _expandable;
  }

  public UserAnonymous _links(GenericLinks _links) {
    this._links = _links;
    return this;
  }

   /**
   * Get _links
   * @return _links
  **/
  @Schema(required = true, description = "")
  public GenericLinks getLinks() {
    return _links;
  }

  public void setLinks(GenericLinks _links) {
    this._links = _links;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserAnonymous userAnonymous = (UserAnonymous) o;
    return Objects.equals(this.type, userAnonymous.type) &&
        Objects.equals(this.profilePicture, userAnonymous.profilePicture) &&
        Objects.equals(this.displayName, userAnonymous.displayName) &&
        Objects.equals(this.operations, userAnonymous.operations) &&
        Objects.equals(this.isExternalCollaborator, userAnonymous.isExternalCollaborator) &&
        Objects.equals(this._expandable, userAnonymous._expandable) &&
        Objects.equals(this._links, userAnonymous._links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, profilePicture, displayName, operations, isExternalCollaborator, _expandable, _links);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserAnonymous {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    profilePicture: ").append(toIndentedString(profilePicture)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    operations: ").append(toIndentedString(operations)).append("\n");
    sb.append("    isExternalCollaborator: ").append(toIndentedString(isExternalCollaborator)).append("\n");
    sb.append("    _expandable: ").append(toIndentedString(_expandable)).append("\n");
    sb.append("    _links: ").append(toIndentedString(_links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
