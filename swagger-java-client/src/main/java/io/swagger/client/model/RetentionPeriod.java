/*
 * The Confluence Cloud REST API
 * This document describes the REST API and resources provided by Confluence. The REST APIs are for developers who want to integrate Confluence into their application and for administrators who want to script interactions with the Confluence server.Confluence's REST APIs provide access to resources (data entities) via URI paths. To use a REST API, your application will make an HTTP request and parse the response. The response format is JSON. Your methods will be the standard HTTP methods like GET, PUT, POST and DELETE. Because the REST API is based on open standards, you can use any web development language to access the API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * RetentionPeriod
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-03-29T20:08:21.572793104Z[GMT]")
public class RetentionPeriod {
  @SerializedName("number")
  private Integer number = null;

  /**
   * The unit of time that the retention period is measured in.
   */
  @JsonAdapter(UnitsEnum.Adapter.class)
  public enum UnitsEnum {
    NANOS("NANOS"),
    MICROS("MICROS"),
    MILLIS("MILLIS"),
    SECONDS("SECONDS"),
    MINUTES("MINUTES"),
    HOURS("HOURS"),
    HALF_DAYS("HALF_DAYS"),
    DAYS("DAYS"),
    WEEKS("WEEKS"),
    MONTHS("MONTHS"),
    YEARS("YEARS"),
    DECADES("DECADES"),
    CENTURIES("CENTURIES"),
    MILLENNIA("MILLENNIA"),
    ERAS("ERAS"),
    FOREVER("FOREVER");

    private String value;

    UnitsEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static UnitsEnum fromValue(String input) {
      for (UnitsEnum b : UnitsEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<UnitsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final UnitsEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public UnitsEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return UnitsEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("units")
  private UnitsEnum units = null;

  public RetentionPeriod number(Integer number) {
    this.number = number;
    return this;
  }

   /**
   * The number of units for the retention period.
   * @return number
  **/
  @Schema(required = true, description = "The number of units for the retention period.")
  public Integer getNumber() {
    return number;
  }

  public void setNumber(Integer number) {
    this.number = number;
  }

  public RetentionPeriod units(UnitsEnum units) {
    this.units = units;
    return this;
  }

   /**
   * The unit of time that the retention period is measured in.
   * @return units
  **/
  @Schema(required = true, description = "The unit of time that the retention period is measured in.")
  public UnitsEnum getUnits() {
    return units;
  }

  public void setUnits(UnitsEnum units) {
    this.units = units;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RetentionPeriod retentionPeriod = (RetentionPeriod) o;
    return Objects.equals(this.number, retentionPeriod.number) &&
        Objects.equals(this.units, retentionPeriod.units);
  }

  @Override
  public int hashCode() {
    return Objects.hash(number, units);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RetentionPeriod {\n");
    
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    units: ").append(toIndentedString(units)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
