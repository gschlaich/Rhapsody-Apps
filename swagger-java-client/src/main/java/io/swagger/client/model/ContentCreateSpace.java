/*
 * The Confluence Cloud REST API
 * This document describes the REST API and resources provided by Confluence. The REST APIs are for developers who want to integrate Confluence into their application and for administrators who want to script interactions with the Confluence server.Confluence's REST APIs provide access to resources (data entities) via URI paths. To use a REST API, your application will make an HTTP request and parse the response. The response format is JSON. Your methods will be the standard HTTP methods like GET, PUT, POST and DELETE. Because the REST API is based on open standards, you can use any web development language to access the API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Content;
import io.swagger.client.model.ContentCreateSpaceDescription;
import io.swagger.client.model.ContentCreateSpaceHistory;
import io.swagger.client.model.ContentCreateSpaceMetadata;
import io.swagger.client.model.GlobalSpaceIdentifier;
import io.swagger.client.model.Icon;
import io.swagger.client.model.LookAndFeel;
import io.swagger.client.model.OperationCheckResult;
import io.swagger.client.model.SpacePermission;
import io.swagger.client.model.SpaceSettings;
import io.swagger.client.model.Theme;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
/**
 * The space that the content is being created in.
 */
@Schema(description = "The space that the content is being created in.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-03-29T20:08:21.572793104Z[GMT]")
public class ContentCreateSpace {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("icon")
  private Icon icon = null;

  @SerializedName("identifiers")
  private GlobalSpaceIdentifier identifiers = null;

  @SerializedName("description")
  private ContentCreateSpaceDescription description = null;

  @SerializedName("homepage")
  private Content homepage = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("metadata")
  private ContentCreateSpaceMetadata metadata = null;

  @SerializedName("operations")
  private List<OperationCheckResult> operations = null;

  @SerializedName("permissions")
  private List<SpacePermission> permissions = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("settings")
  private SpaceSettings settings = null;

  @SerializedName("theme")
  private Theme theme = null;

  @SerializedName("lookAndFeel")
  private LookAndFeel lookAndFeel = null;

  @SerializedName("history")
  private ContentCreateSpaceHistory history = null;

  @SerializedName("key")
  private String key = null;

  @SerializedName("links")
  private Map<String, Object> links = null;

  public ContentCreateSpace id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public ContentCreateSpace name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ContentCreateSpace icon(Icon icon) {
    this.icon = icon;
    return this;
  }

   /**
   * Get icon
   * @return icon
  **/
  @Schema(description = "")
  public Icon getIcon() {
    return icon;
  }

  public void setIcon(Icon icon) {
    this.icon = icon;
  }

  public ContentCreateSpace identifiers(GlobalSpaceIdentifier identifiers) {
    this.identifiers = identifiers;
    return this;
  }

   /**
   * Get identifiers
   * @return identifiers
  **/
  @Schema(description = "")
  public GlobalSpaceIdentifier getIdentifiers() {
    return identifiers;
  }

  public void setIdentifiers(GlobalSpaceIdentifier identifiers) {
    this.identifiers = identifiers;
  }

  public ContentCreateSpace description(ContentCreateSpaceDescription description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public ContentCreateSpaceDescription getDescription() {
    return description;
  }

  public void setDescription(ContentCreateSpaceDescription description) {
    this.description = description;
  }

  public ContentCreateSpace homepage(Content homepage) {
    this.homepage = homepage;
    return this;
  }

   /**
   * Get homepage
   * @return homepage
  **/
  @Schema(description = "")
  public Content getHomepage() {
    return homepage;
  }

  public void setHomepage(Content homepage) {
    this.homepage = homepage;
  }

  public ContentCreateSpace type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public ContentCreateSpace metadata(ContentCreateSpaceMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @Schema(description = "")
  public ContentCreateSpaceMetadata getMetadata() {
    return metadata;
  }

  public void setMetadata(ContentCreateSpaceMetadata metadata) {
    this.metadata = metadata;
  }

  public ContentCreateSpace operations(List<OperationCheckResult> operations) {
    this.operations = operations;
    return this;
  }

  public ContentCreateSpace addOperationsItem(OperationCheckResult operationsItem) {
    if (this.operations == null) {
      this.operations = new ArrayList<OperationCheckResult>();
    }
    this.operations.add(operationsItem);
    return this;
  }

   /**
   * Get operations
   * @return operations
  **/
  @Schema(description = "")
  public List<OperationCheckResult> getOperations() {
    return operations;
  }

  public void setOperations(List<OperationCheckResult> operations) {
    this.operations = operations;
  }

  public ContentCreateSpace permissions(List<SpacePermission> permissions) {
    this.permissions = permissions;
    return this;
  }

  public ContentCreateSpace addPermissionsItem(SpacePermission permissionsItem) {
    if (this.permissions == null) {
      this.permissions = new ArrayList<SpacePermission>();
    }
    this.permissions.add(permissionsItem);
    return this;
  }

   /**
   * Get permissions
   * @return permissions
  **/
  @Schema(description = "")
  public List<SpacePermission> getPermissions() {
    return permissions;
  }

  public void setPermissions(List<SpacePermission> permissions) {
    this.permissions = permissions;
  }

  public ContentCreateSpace status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public ContentCreateSpace settings(SpaceSettings settings) {
    this.settings = settings;
    return this;
  }

   /**
   * Get settings
   * @return settings
  **/
  @Schema(description = "")
  public SpaceSettings getSettings() {
    return settings;
  }

  public void setSettings(SpaceSettings settings) {
    this.settings = settings;
  }

  public ContentCreateSpace theme(Theme theme) {
    this.theme = theme;
    return this;
  }

   /**
   * Get theme
   * @return theme
  **/
  @Schema(description = "")
  public Theme getTheme() {
    return theme;
  }

  public void setTheme(Theme theme) {
    this.theme = theme;
  }

  public ContentCreateSpace lookAndFeel(LookAndFeel lookAndFeel) {
    this.lookAndFeel = lookAndFeel;
    return this;
  }

   /**
   * Get lookAndFeel
   * @return lookAndFeel
  **/
  @Schema(description = "")
  public LookAndFeel getLookAndFeel() {
    return lookAndFeel;
  }

  public void setLookAndFeel(LookAndFeel lookAndFeel) {
    this.lookAndFeel = lookAndFeel;
  }

  public ContentCreateSpace history(ContentCreateSpaceHistory history) {
    this.history = history;
    return this;
  }

   /**
   * Get history
   * @return history
  **/
  @Schema(description = "")
  public ContentCreateSpaceHistory getHistory() {
    return history;
  }

  public void setHistory(ContentCreateSpaceHistory history) {
    this.history = history;
  }

  public ContentCreateSpace key(String key) {
    this.key = key;
    return this;
  }

   /**
   * The key of the space.
   * @return key
  **/
  @Schema(required = true, description = "The key of the space.")
  public String getKey() {
    return key;
  }

  public void setKey(String key) {
    this.key = key;
  }

  public ContentCreateSpace links(Map<String, Object> links) {
    this.links = links;
    return this;
  }

  public ContentCreateSpace putLinksItem(String key, Object linksItem) {
    if (this.links == null) {
      this.links = new HashMap<String, Object>();
    }
    this.links.put(key, linksItem);
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @Schema(description = "")
  public Map<String, Object> getLinks() {
    return links;
  }

  public void setLinks(Map<String, Object> links) {
    this.links = links;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContentCreateSpace contentCreateSpace = (ContentCreateSpace) o;
    return Objects.equals(this.id, contentCreateSpace.id) &&
        Objects.equals(this.name, contentCreateSpace.name) &&
        Objects.equals(this.icon, contentCreateSpace.icon) &&
        Objects.equals(this.identifiers, contentCreateSpace.identifiers) &&
        Objects.equals(this.description, contentCreateSpace.description) &&
        Objects.equals(this.homepage, contentCreateSpace.homepage) &&
        Objects.equals(this.type, contentCreateSpace.type) &&
        Objects.equals(this.metadata, contentCreateSpace.metadata) &&
        Objects.equals(this.operations, contentCreateSpace.operations) &&
        Objects.equals(this.permissions, contentCreateSpace.permissions) &&
        Objects.equals(this.status, contentCreateSpace.status) &&
        Objects.equals(this.settings, contentCreateSpace.settings) &&
        Objects.equals(this.theme, contentCreateSpace.theme) &&
        Objects.equals(this.lookAndFeel, contentCreateSpace.lookAndFeel) &&
        Objects.equals(this.history, contentCreateSpace.history) &&
        Objects.equals(this.key, contentCreateSpace.key) &&
        Objects.equals(this.links, contentCreateSpace.links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, icon, identifiers, description, homepage, type, metadata, operations, permissions, status, settings, theme, lookAndFeel, history, key, links);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContentCreateSpace {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    icon: ").append(toIndentedString(icon)).append("\n");
    sb.append("    identifiers: ").append(toIndentedString(identifiers)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    homepage: ").append(toIndentedString(homepage)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    operations: ").append(toIndentedString(operations)).append("\n");
    sb.append("    permissions: ").append(toIndentedString(permissions)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    settings: ").append(toIndentedString(settings)).append("\n");
    sb.append("    theme: ").append(toIndentedString(theme)).append("\n");
    sb.append("    lookAndFeel: ").append(toIndentedString(lookAndFeel)).append("\n");
    sb.append("    history: ").append(toIndentedString(history)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
