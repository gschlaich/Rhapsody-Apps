/*
 * The Confluence Cloud REST API
 * This document describes the REST API and resources provided by Confluence. The REST APIs are for developers who want to integrate Confluence into their application and for administrators who want to script interactions with the Confluence server.Confluence's REST APIs provide access to resources (data entities) via URI paths. To use a REST API, your application will make an HTTP request and parse the response. The response format is JSON. Your methods will be the standard HTTP methods like GET, PUT, POST and DELETE. Because the REST API is based on open standards, you can use any web development language to access the API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ContentState;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * AvailableContentStates
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-03-29T20:08:21.572793104Z[GMT]")
public class AvailableContentStates {
  @SerializedName("spaceContentStates")
  private List<ContentState> spaceContentStates = new ArrayList<ContentState>();

  @SerializedName("customContentStates")
  private List<ContentState> customContentStates = new ArrayList<ContentState>();

  public AvailableContentStates spaceContentStates(List<ContentState> spaceContentStates) {
    this.spaceContentStates = spaceContentStates;
    return this;
  }

  public AvailableContentStates addSpaceContentStatesItem(ContentState spaceContentStatesItem) {
    this.spaceContentStates.add(spaceContentStatesItem);
    return this;
  }

   /**
   * Space suggested content states that can be used in the space. This can be null if space content states are disabled in the space. This list can be empty if there are no space content states defined in the space. All spaces start with 3 default space content states, and this can be modified in the UI under space settings.
   * @return spaceContentStates
  **/
  @Schema(required = true, description = "Space suggested content states that can be used in the space. This can be null if space content states are disabled in the space. This list can be empty if there are no space content states defined in the space. All spaces start with 3 default space content states, and this can be modified in the UI under space settings.")
  public List<ContentState> getSpaceContentStates() {
    return spaceContentStates;
  }

  public void setSpaceContentStates(List<ContentState> spaceContentStates) {
    this.spaceContentStates = spaceContentStates;
  }

  public AvailableContentStates customContentStates(List<ContentState> customContentStates) {
    this.customContentStates = customContentStates;
    return this;
  }

  public AvailableContentStates addCustomContentStatesItem(ContentState customContentStatesItem) {
    this.customContentStates.add(customContentStatesItem);
    return this;
  }

   /**
   * Custom content states that can be used by the user on the content of this call. This can be null if custom content states are disabled in the space of the content. This list can be empty if there are no custom content states defined by the user. This will at most have 3 of the most recently published content states.  Only the calling user has access to place these states on content, but all users can see these states once they are placed.
   * @return customContentStates
  **/
  @Schema(required = true, description = "Custom content states that can be used by the user on the content of this call. This can be null if custom content states are disabled in the space of the content. This list can be empty if there are no custom content states defined by the user. This will at most have 3 of the most recently published content states.  Only the calling user has access to place these states on content, but all users can see these states once they are placed.")
  public List<ContentState> getCustomContentStates() {
    return customContentStates;
  }

  public void setCustomContentStates(List<ContentState> customContentStates) {
    this.customContentStates = customContentStates;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AvailableContentStates availableContentStates = (AvailableContentStates) o;
    return Objects.equals(this.spaceContentStates, availableContentStates.spaceContentStates) &&
        Objects.equals(this.customContentStates, availableContentStates.customContentStates);
  }

  @Override
  public int hashCode() {
    return Objects.hash(spaceContentStates, customContentStates);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AvailableContentStates {\n");
    
    sb.append("    spaceContentStates: ").append(toIndentedString(spaceContentStates)).append("\n");
    sb.append("    customContentStates: ").append(toIndentedString(customContentStates)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
