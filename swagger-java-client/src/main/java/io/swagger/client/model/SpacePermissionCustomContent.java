/*
 * The Confluence Cloud REST API
 * This document describes the REST API and resources provided by Confluence. The REST APIs are for developers who want to integrate Confluence into their application and for administrators who want to script interactions with the Confluence server.Confluence's REST APIs provide access to resources (data entities) via URI paths. To use a REST API, your application will make an HTTP request and parse the response. The response format is JSON. Your methods will be the standard HTTP methods like GET, PUT, POST and DELETE. Because the REST API is based on open standards, you can use any web development language to access the API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.PermissionSubject;
import io.swagger.client.model.SpacePermissionCustomContentOperations;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * This object represents a list of space permissions for custom content type for an individual user. Permissions consist of a subjects object and a list with at least one operation object.
 */
@Schema(description = "This object represents a list of space permissions for custom content type for an individual user. Permissions consist of a subjects object and a list with at least one operation object.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-03-29T20:08:21.572793104Z[GMT]")
public class SpacePermissionCustomContent {
  @SerializedName("subject")
  private PermissionSubject subject = null;

  @SerializedName("operations")
  private List<SpacePermissionCustomContentOperations> operations = new ArrayList<SpacePermissionCustomContentOperations>();

  public SpacePermissionCustomContent subject(PermissionSubject subject) {
    this.subject = subject;
    return this;
  }

   /**
   * Get subject
   * @return subject
  **/
  @Schema(required = true, description = "")
  public PermissionSubject getSubject() {
    return subject;
  }

  public void setSubject(PermissionSubject subject) {
    this.subject = subject;
  }

  public SpacePermissionCustomContent operations(List<SpacePermissionCustomContentOperations> operations) {
    this.operations = operations;
    return this;
  }

  public SpacePermissionCustomContent addOperationsItem(SpacePermissionCustomContentOperations operationsItem) {
    this.operations.add(operationsItem);
    return this;
  }

   /**
   * Get operations
   * @return operations
  **/
  @Schema(required = true, description = "")
  public List<SpacePermissionCustomContentOperations> getOperations() {
    return operations;
  }

  public void setOperations(List<SpacePermissionCustomContentOperations> operations) {
    this.operations = operations;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SpacePermissionCustomContent spacePermissionCustomContent = (SpacePermissionCustomContent) o;
    return Objects.equals(this.subject, spacePermissionCustomContent.subject) &&
        Objects.equals(this.operations, spacePermissionCustomContent.operations);
  }

  @Override
  public int hashCode() {
    return Objects.hash(subject, operations);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SpacePermissionCustomContent {\n");
    
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    operations: ").append(toIndentedString(operations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
