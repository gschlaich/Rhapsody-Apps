/*
 * The Confluence Cloud REST API
 * This document describes the REST API and resources provided by Confluence. The REST APIs are for developers who want to integrate Confluence into their application and for administrators who want to script interactions with the Confluence server.Confluence's REST APIs provide access to resources (data entities) via URI paths. To use a REST API, your application will make an HTTP request and parse the response. The response format is JSON. Your methods will be the standard HTTP methods like GET, PUT, POST and DELETE. Because the REST API is based on open standards, you can use any web development language to access the API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.WatchUser;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * SpaceWatch
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-03-29T20:08:21.572793104Z[GMT]")
public class SpaceWatch {
  @SerializedName("type")
  private String type = null;

  @SerializedName("watcher")
  private WatchUser watcher = null;

  @SerializedName("spaceKey")
  private String spaceKey = null;

  @SerializedName("labelName")
  private String labelName = null;

  @SerializedName("prefix")
  private String prefix = null;

  public SpaceWatch type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(required = true, description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public SpaceWatch watcher(WatchUser watcher) {
    this.watcher = watcher;
    return this;
  }

   /**
   * Get watcher
   * @return watcher
  **/
  @Schema(required = true, description = "")
  public WatchUser getWatcher() {
    return watcher;
  }

  public void setWatcher(WatchUser watcher) {
    this.watcher = watcher;
  }

  public SpaceWatch spaceKey(String spaceKey) {
    this.spaceKey = spaceKey;
    return this;
  }

   /**
   * Get spaceKey
   * @return spaceKey
  **/
  @Schema(description = "")
  public String getSpaceKey() {
    return spaceKey;
  }

  public void setSpaceKey(String spaceKey) {
    this.spaceKey = spaceKey;
  }

  public SpaceWatch labelName(String labelName) {
    this.labelName = labelName;
    return this;
  }

   /**
   * Get labelName
   * @return labelName
  **/
  @Schema(description = "")
  public String getLabelName() {
    return labelName;
  }

  public void setLabelName(String labelName) {
    this.labelName = labelName;
  }

  public SpaceWatch prefix(String prefix) {
    this.prefix = prefix;
    return this;
  }

   /**
   * Get prefix
   * @return prefix
  **/
  @Schema(description = "")
  public String getPrefix() {
    return prefix;
  }

  public void setPrefix(String prefix) {
    this.prefix = prefix;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SpaceWatch spaceWatch = (SpaceWatch) o;
    return Objects.equals(this.type, spaceWatch.type) &&
        Objects.equals(this.watcher, spaceWatch.watcher) &&
        Objects.equals(this.spaceKey, spaceWatch.spaceKey) &&
        Objects.equals(this.labelName, spaceWatch.labelName) &&
        Objects.equals(this.prefix, spaceWatch.prefix);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, watcher, spaceKey, labelName, prefix);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SpaceWatch {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    watcher: ").append(toIndentedString(watcher)).append("\n");
    sb.append("    spaceKey: ").append(toIndentedString(spaceKey)).append("\n");
    sb.append("    labelName: ").append(toIndentedString(labelName)).append("\n");
    sb.append("    prefix: ").append(toIndentedString(prefix)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
