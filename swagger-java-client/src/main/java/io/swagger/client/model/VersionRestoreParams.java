/*
 * The Confluence Cloud REST API
 * This document describes the REST API and resources provided by Confluence. The REST APIs are for developers who want to integrate Confluence into their application and for administrators who want to script interactions with the Confluence server.Confluence's REST APIs provide access to resources (data entities) via URI paths. To use a REST API, your application will make an HTTP request and parse the response. The response format is JSON. Your methods will be the standard HTTP methods like GET, PUT, POST and DELETE. Because the REST API is based on open standards, you can use any web development language to access the API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * VersionRestoreParams
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-03-29T20:08:21.572793104Z[GMT]")
public class VersionRestoreParams {
  @SerializedName("versionNumber")
  private Integer versionNumber = null;

  @SerializedName("message")
  private String message = null;

  @SerializedName("restoreTitle")
  private Boolean restoreTitle = false;

  public VersionRestoreParams versionNumber(Integer versionNumber) {
    this.versionNumber = versionNumber;
    return this;
  }

   /**
   * The version number to be restored.
   * @return versionNumber
  **/
  @Schema(required = true, description = "The version number to be restored.")
  public Integer getVersionNumber() {
    return versionNumber;
  }

  public void setVersionNumber(Integer versionNumber) {
    this.versionNumber = versionNumber;
  }

  public VersionRestoreParams message(String message) {
    this.message = message;
    return this;
  }

   /**
   * Description for the version.
   * @return message
  **/
  @Schema(required = true, description = "Description for the version.")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public VersionRestoreParams restoreTitle(Boolean restoreTitle) {
    this.restoreTitle = restoreTitle;
    return this;
  }

   /**
   * If true, the content title will be the same as the title from the version restored. Defaults to &#x60;false&#x60;.
   * @return restoreTitle
  **/
  @Schema(description = "If true, the content title will be the same as the title from the version restored. Defaults to `false`.")
  public Boolean isRestoreTitle() {
    return restoreTitle;
  }

  public void setRestoreTitle(Boolean restoreTitle) {
    this.restoreTitle = restoreTitle;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VersionRestoreParams versionRestoreParams = (VersionRestoreParams) o;
    return Objects.equals(this.versionNumber, versionRestoreParams.versionNumber) &&
        Objects.equals(this.message, versionRestoreParams.message) &&
        Objects.equals(this.restoreTitle, versionRestoreParams.restoreTitle);
  }

  @Override
  public int hashCode() {
    return Objects.hash(versionNumber, message, restoreTitle);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VersionRestoreParams {\n");
    
    sb.append("    versionNumber: ").append(toIndentedString(versionNumber)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    restoreTitle: ").append(toIndentedString(restoreTitle)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
