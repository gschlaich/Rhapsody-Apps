/*
 * The Confluence Cloud REST API
 * This document describes the REST API and resources provided by Confluence. The REST APIs are for developers who want to integrate Confluence into their application and for administrators who want to script interactions with the Confluence server.Confluence's REST APIs provide access to resources (data entities) via URI paths. To use a REST API, your application will make an HTTP request and parse the response. The response format is JSON. Your methods will be the standard HTTP methods like GET, PUT, POST and DELETE. Because the REST API is based on open standards, you can use any web development language to access the API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Content;
import io.swagger.client.model.GenericLinks;
import io.swagger.client.model.User;
import io.swagger.client.model.UsersUserKeys;
import io.swagger.client.model.VersionExpandable;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import org.threeten.bp.OffsetDateTime;
/**
 * Version
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-03-29T20:08:21.572793104Z[GMT]")
public class Version extends HashMap<String, Object> {
  @SerializedName("by")
  private User by = null;

  @SerializedName("when")
  private OffsetDateTime when = null;

  @SerializedName("friendlyWhen")
  private String friendlyWhen = null;

  @SerializedName("message")
  private String message = null;

  @SerializedName("number")
  private Integer number = null;

  @SerializedName("minorEdit")
  private Boolean minorEdit = null;

  @SerializedName("content")
  private Content content = null;

  @SerializedName("collaborators")
  private UsersUserKeys collaborators = null;

  @SerializedName("_expandable")
  private VersionExpandable _expandable = null;

  @SerializedName("_links")
  private GenericLinks _links = null;

  @SerializedName("contentTypeModified")
  private Boolean contentTypeModified = null;

  @SerializedName("confRev")
  private String confRev = null;

  @SerializedName("syncRev")
  private String syncRev = null;

  @SerializedName("syncRevSource")
  private String syncRevSource = null;

  public Version by(User by) {
    this.by = by;
    return this;
  }

   /**
   * Get by
   * @return by
  **/
  @Schema(description = "")
  public User getBy() {
    return by;
  }

  public void setBy(User by) {
    this.by = by;
  }

  public Version when(OffsetDateTime when) {
    this.when = when;
    return this;
  }

   /**
   * Get when
   * @return when
  **/
  @Schema(required = true, description = "")
  public OffsetDateTime getWhen() {
    return when;
  }

  public void setWhen(OffsetDateTime when) {
    this.when = when;
  }

  public Version friendlyWhen(String friendlyWhen) {
    this.friendlyWhen = friendlyWhen;
    return this;
  }

   /**
   * Get friendlyWhen
   * @return friendlyWhen
  **/
  @Schema(description = "")
  public String getFriendlyWhen() {
    return friendlyWhen;
  }

  public void setFriendlyWhen(String friendlyWhen) {
    this.friendlyWhen = friendlyWhen;
  }

  public Version message(String message) {
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @Schema(description = "")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public Version number(Integer number) {
    this.number = number;
    return this;
  }

   /**
   * Set this to the current version number incremented by one
   * @return number
  **/
  @Schema(required = true, description = "Set this to the current version number incremented by one")
  public Integer getNumber() {
    return number;
  }

  public void setNumber(Integer number) {
    this.number = number;
  }

  public Version minorEdit(Boolean minorEdit) {
    this.minorEdit = minorEdit;
    return this;
  }

   /**
   * If &#x60;minorEdit&#x60; is set to &#x27;true&#x27;, no notification email or activity stream will be generated for the change.
   * @return minorEdit
  **/
  @Schema(required = true, description = "If `minorEdit` is set to 'true', no notification email or activity stream will be generated for the change.")
  public Boolean isMinorEdit() {
    return minorEdit;
  }

  public void setMinorEdit(Boolean minorEdit) {
    this.minorEdit = minorEdit;
  }

  public Version content(Content content) {
    this.content = content;
    return this;
  }

   /**
   * Get content
   * @return content
  **/
  @Schema(description = "")
  public Content getContent() {
    return content;
  }

  public void setContent(Content content) {
    this.content = content;
  }

  public Version collaborators(UsersUserKeys collaborators) {
    this.collaborators = collaborators;
    return this;
  }

   /**
   * Get collaborators
   * @return collaborators
  **/
  @Schema(description = "")
  public UsersUserKeys getCollaborators() {
    return collaborators;
  }

  public void setCollaborators(UsersUserKeys collaborators) {
    this.collaborators = collaborators;
  }

  public Version _expandable(VersionExpandable _expandable) {
    this._expandable = _expandable;
    return this;
  }

   /**
   * Get _expandable
   * @return _expandable
  **/
  @Schema(description = "")
  public VersionExpandable getExpandable() {
    return _expandable;
  }

  public void setExpandable(VersionExpandable _expandable) {
    this._expandable = _expandable;
  }

  public Version _links(GenericLinks _links) {
    this._links = _links;
    return this;
  }

   /**
   * Get _links
   * @return _links
  **/
  @Schema(description = "")
  public GenericLinks getLinks() {
    return _links;
  }

  public void setLinks(GenericLinks _links) {
    this._links = _links;
  }

  public Version contentTypeModified(Boolean contentTypeModified) {
    this.contentTypeModified = contentTypeModified;
    return this;
  }

   /**
   * True if content type is modifed in this version (e.g. page to blog)
   * @return contentTypeModified
  **/
  @Schema(description = "True if content type is modifed in this version (e.g. page to blog)")
  public Boolean isContentTypeModified() {
    return contentTypeModified;
  }

  public void setContentTypeModified(Boolean contentTypeModified) {
    this.contentTypeModified = contentTypeModified;
  }

  public Version confRev(String confRev) {
    this.confRev = confRev;
    return this;
  }

   /**
   * The revision id provided by confluence to be used as a revision in Synchrony
   * @return confRev
  **/
  @Schema(description = "The revision id provided by confluence to be used as a revision in Synchrony")
  public String getConfRev() {
    return confRev;
  }

  public void setConfRev(String confRev) {
    this.confRev = confRev;
  }

  public Version syncRev(String syncRev) {
    this.syncRev = syncRev;
    return this;
  }

   /**
   * The revision id provided by Synchrony
   * @return syncRev
  **/
  @Schema(description = "The revision id provided by Synchrony")
  public String getSyncRev() {
    return syncRev;
  }

  public void setSyncRev(String syncRev) {
    this.syncRev = syncRev;
  }

  public Version syncRevSource(String syncRevSource) {
    this.syncRevSource = syncRevSource;
    return this;
  }

   /**
   * Source of the synchrony revision
   * @return syncRevSource
  **/
  @Schema(description = "Source of the synchrony revision")
  public String getSyncRevSource() {
    return syncRevSource;
  }

  public void setSyncRevSource(String syncRevSource) {
    this.syncRevSource = syncRevSource;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Version version = (Version) o;
    return Objects.equals(this.by, version.by) &&
        Objects.equals(this.when, version.when) &&
        Objects.equals(this.friendlyWhen, version.friendlyWhen) &&
        Objects.equals(this.message, version.message) &&
        Objects.equals(this.number, version.number) &&
        Objects.equals(this.minorEdit, version.minorEdit) &&
        Objects.equals(this.content, version.content) &&
        Objects.equals(this.collaborators, version.collaborators) &&
        Objects.equals(this._expandable, version._expandable) &&
        Objects.equals(this._links, version._links) &&
        Objects.equals(this.contentTypeModified, version.contentTypeModified) &&
        Objects.equals(this.confRev, version.confRev) &&
        Objects.equals(this.syncRev, version.syncRev) &&
        Objects.equals(this.syncRevSource, version.syncRevSource) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(by, when, friendlyWhen, message, number, minorEdit, content, collaborators, _expandable, _links, contentTypeModified, confRev, syncRev, syncRevSource, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Version {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    by: ").append(toIndentedString(by)).append("\n");
    sb.append("    when: ").append(toIndentedString(when)).append("\n");
    sb.append("    friendlyWhen: ").append(toIndentedString(friendlyWhen)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    minorEdit: ").append(toIndentedString(minorEdit)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    collaborators: ").append(toIndentedString(collaborators)).append("\n");
    sb.append("    _expandable: ").append(toIndentedString(_expandable)).append("\n");
    sb.append("    _links: ").append(toIndentedString(_links)).append("\n");
    sb.append("    contentTypeModified: ").append(toIndentedString(contentTypeModified)).append("\n");
    sb.append("    confRev: ").append(toIndentedString(confRev)).append("\n");
    sb.append("    syncRev: ").append(toIndentedString(syncRev)).append("\n");
    sb.append("    syncRevSource: ").append(toIndentedString(syncRevSource)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
