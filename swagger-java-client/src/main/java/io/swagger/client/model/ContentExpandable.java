/*
 * The Confluence Cloud REST API
 * This document describes the REST API and resources provided by Confluence. The REST APIs are for developers who want to integrate Confluence into their application and for administrators who want to script interactions with the Confluence server.Confluence's REST APIs provide access to resources (data entities) via URI paths. To use a REST API, your application will make an HTTP request and parse the response. The response format is JSON. Your methods will be the standard HTTP methods like GET, PUT, POST and DELETE. Because the REST API is based on open standards, you can use any web development language to access the API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * ContentExpandable
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-03-29T20:08:21.572793104Z[GMT]")
public class ContentExpandable {
  @SerializedName("childTypes")
  private String childTypes = null;

  @SerializedName("container")
  private String container = null;

  @SerializedName("metadata")
  private String metadata = null;

  @SerializedName("operations")
  private String operations = null;

  @SerializedName("children")
  private String children = null;

  @SerializedName("restrictions")
  private String restrictions = null;

  @SerializedName("history")
  private String history = null;

  @SerializedName("ancestors")
  private String ancestors = null;

  @SerializedName("body")
  private String body = null;

  @SerializedName("version")
  private String version = null;

  @SerializedName("descendants")
  private String descendants = null;

  @SerializedName("space")
  private String space = null;

  @SerializedName("extensions")
  private String extensions = null;

  @SerializedName("schedulePublishDate")
  private String schedulePublishDate = null;

  @SerializedName("schedulePublishInfo")
  private String schedulePublishInfo = null;

  @SerializedName("macroRenderedOutput")
  private String macroRenderedOutput = null;

  public ContentExpandable childTypes(String childTypes) {
    this.childTypes = childTypes;
    return this;
  }

   /**
   * Get childTypes
   * @return childTypes
  **/
  @Schema(description = "")
  public String getChildTypes() {
    return childTypes;
  }

  public void setChildTypes(String childTypes) {
    this.childTypes = childTypes;
  }

  public ContentExpandable container(String container) {
    this.container = container;
    return this;
  }

   /**
   * Get container
   * @return container
  **/
  @Schema(description = "")
  public String getContainer() {
    return container;
  }

  public void setContainer(String container) {
    this.container = container;
  }

  public ContentExpandable metadata(String metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @Schema(description = "")
  public String getMetadata() {
    return metadata;
  }

  public void setMetadata(String metadata) {
    this.metadata = metadata;
  }

  public ContentExpandable operations(String operations) {
    this.operations = operations;
    return this;
  }

   /**
   * Get operations
   * @return operations
  **/
  @Schema(description = "")
  public String getOperations() {
    return operations;
  }

  public void setOperations(String operations) {
    this.operations = operations;
  }

  public ContentExpandable children(String children) {
    this.children = children;
    return this;
  }

   /**
   * Get children
   * @return children
  **/
  @Schema(description = "")
  public String getChildren() {
    return children;
  }

  public void setChildren(String children) {
    this.children = children;
  }

  public ContentExpandable restrictions(String restrictions) {
    this.restrictions = restrictions;
    return this;
  }

   /**
   * Get restrictions
   * @return restrictions
  **/
  @Schema(description = "")
  public String getRestrictions() {
    return restrictions;
  }

  public void setRestrictions(String restrictions) {
    this.restrictions = restrictions;
  }

  public ContentExpandable history(String history) {
    this.history = history;
    return this;
  }

   /**
   * Get history
   * @return history
  **/
  @Schema(description = "")
  public String getHistory() {
    return history;
  }

  public void setHistory(String history) {
    this.history = history;
  }

  public ContentExpandable ancestors(String ancestors) {
    this.ancestors = ancestors;
    return this;
  }

   /**
   * Get ancestors
   * @return ancestors
  **/
  @Schema(description = "")
  public String getAncestors() {
    return ancestors;
  }

  public void setAncestors(String ancestors) {
    this.ancestors = ancestors;
  }

  public ContentExpandable body(String body) {
    this.body = body;
    return this;
  }

   /**
   * Get body
   * @return body
  **/
  @Schema(description = "")
  public String getBody() {
    return body;
  }

  public void setBody(String body) {
    this.body = body;
  }

  public ContentExpandable version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @Schema(description = "")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public ContentExpandable descendants(String descendants) {
    this.descendants = descendants;
    return this;
  }

   /**
   * Get descendants
   * @return descendants
  **/
  @Schema(description = "")
  public String getDescendants() {
    return descendants;
  }

  public void setDescendants(String descendants) {
    this.descendants = descendants;
  }

  public ContentExpandable space(String space) {
    this.space = space;
    return this;
  }

   /**
   * Get space
   * @return space
  **/
  @Schema(description = "")
  public String getSpace() {
    return space;
  }

  public void setSpace(String space) {
    this.space = space;
  }

  public ContentExpandable extensions(String extensions) {
    this.extensions = extensions;
    return this;
  }

   /**
   * Get extensions
   * @return extensions
  **/
  @Schema(description = "")
  public String getExtensions() {
    return extensions;
  }

  public void setExtensions(String extensions) {
    this.extensions = extensions;
  }

  public ContentExpandable schedulePublishDate(String schedulePublishDate) {
    this.schedulePublishDate = schedulePublishDate;
    return this;
  }

   /**
   * Get schedulePublishDate
   * @return schedulePublishDate
  **/
  @Schema(description = "")
  public String getSchedulePublishDate() {
    return schedulePublishDate;
  }

  public void setSchedulePublishDate(String schedulePublishDate) {
    this.schedulePublishDate = schedulePublishDate;
  }

  public ContentExpandable schedulePublishInfo(String schedulePublishInfo) {
    this.schedulePublishInfo = schedulePublishInfo;
    return this;
  }

   /**
   * Get schedulePublishInfo
   * @return schedulePublishInfo
  **/
  @Schema(description = "")
  public String getSchedulePublishInfo() {
    return schedulePublishInfo;
  }

  public void setSchedulePublishInfo(String schedulePublishInfo) {
    this.schedulePublishInfo = schedulePublishInfo;
  }

  public ContentExpandable macroRenderedOutput(String macroRenderedOutput) {
    this.macroRenderedOutput = macroRenderedOutput;
    return this;
  }

   /**
   * Get macroRenderedOutput
   * @return macroRenderedOutput
  **/
  @Schema(description = "")
  public String getMacroRenderedOutput() {
    return macroRenderedOutput;
  }

  public void setMacroRenderedOutput(String macroRenderedOutput) {
    this.macroRenderedOutput = macroRenderedOutput;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContentExpandable contentExpandable = (ContentExpandable) o;
    return Objects.equals(this.childTypes, contentExpandable.childTypes) &&
        Objects.equals(this.container, contentExpandable.container) &&
        Objects.equals(this.metadata, contentExpandable.metadata) &&
        Objects.equals(this.operations, contentExpandable.operations) &&
        Objects.equals(this.children, contentExpandable.children) &&
        Objects.equals(this.restrictions, contentExpandable.restrictions) &&
        Objects.equals(this.history, contentExpandable.history) &&
        Objects.equals(this.ancestors, contentExpandable.ancestors) &&
        Objects.equals(this.body, contentExpandable.body) &&
        Objects.equals(this.version, contentExpandable.version) &&
        Objects.equals(this.descendants, contentExpandable.descendants) &&
        Objects.equals(this.space, contentExpandable.space) &&
        Objects.equals(this.extensions, contentExpandable.extensions) &&
        Objects.equals(this.schedulePublishDate, contentExpandable.schedulePublishDate) &&
        Objects.equals(this.schedulePublishInfo, contentExpandable.schedulePublishInfo) &&
        Objects.equals(this.macroRenderedOutput, contentExpandable.macroRenderedOutput);
  }

  @Override
  public int hashCode() {
    return Objects.hash(childTypes, container, metadata, operations, children, restrictions, history, ancestors, body, version, descendants, space, extensions, schedulePublishDate, schedulePublishInfo, macroRenderedOutput);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContentExpandable {\n");
    
    sb.append("    childTypes: ").append(toIndentedString(childTypes)).append("\n");
    sb.append("    container: ").append(toIndentedString(container)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    operations: ").append(toIndentedString(operations)).append("\n");
    sb.append("    children: ").append(toIndentedString(children)).append("\n");
    sb.append("    restrictions: ").append(toIndentedString(restrictions)).append("\n");
    sb.append("    history: ").append(toIndentedString(history)).append("\n");
    sb.append("    ancestors: ").append(toIndentedString(ancestors)).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    descendants: ").append(toIndentedString(descendants)).append("\n");
    sb.append("    space: ").append(toIndentedString(space)).append("\n");
    sb.append("    extensions: ").append(toIndentedString(extensions)).append("\n");
    sb.append("    schedulePublishDate: ").append(toIndentedString(schedulePublishDate)).append("\n");
    sb.append("    schedulePublishInfo: ").append(toIndentedString(schedulePublishInfo)).append("\n");
    sb.append("    macroRenderedOutput: ").append(toIndentedString(macroRenderedOutput)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
