/*
 * The Confluence Cloud REST API
 * This document describes the REST API and resources provided by Confluence. The REST APIs are for developers who want to integrate Confluence into their application and for administrators who want to script interactions with the Confluence server.Confluence's REST APIs provide access to resources (data entities) via URI paths. To use a REST API, your application will make an HTTP request and parse the response. The response format is JSON. Your methods will be the standard HTTP methods like GET, PUT, POST and DELETE. Because the REST API is based on open standards, you can use any web development language to access the API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ContentCreateSpaceDescriptionExpandable;
import io.swagger.client.model.SpaceDescription;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * ContentCreateSpaceDescription
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-03-29T20:08:21.572793104Z[GMT]")
public class ContentCreateSpaceDescription {
  @SerializedName("plain")
  private SpaceDescription plain = null;

  @SerializedName("view")
  private SpaceDescription view = null;

  @SerializedName("_expandable")
  private ContentCreateSpaceDescriptionExpandable _expandable = null;

  public ContentCreateSpaceDescription plain(SpaceDescription plain) {
    this.plain = plain;
    return this;
  }

   /**
   * Get plain
   * @return plain
  **/
  @Schema(description = "")
  public SpaceDescription getPlain() {
    return plain;
  }

  public void setPlain(SpaceDescription plain) {
    this.plain = plain;
  }

  public ContentCreateSpaceDescription view(SpaceDescription view) {
    this.view = view;
    return this;
  }

   /**
   * Get view
   * @return view
  **/
  @Schema(description = "")
  public SpaceDescription getView() {
    return view;
  }

  public void setView(SpaceDescription view) {
    this.view = view;
  }

  public ContentCreateSpaceDescription _expandable(ContentCreateSpaceDescriptionExpandable _expandable) {
    this._expandable = _expandable;
    return this;
  }

   /**
   * Get _expandable
   * @return _expandable
  **/
  @Schema(description = "")
  public ContentCreateSpaceDescriptionExpandable getExpandable() {
    return _expandable;
  }

  public void setExpandable(ContentCreateSpaceDescriptionExpandable _expandable) {
    this._expandable = _expandable;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContentCreateSpaceDescription contentCreateSpaceDescription = (ContentCreateSpaceDescription) o;
    return Objects.equals(this.plain, contentCreateSpaceDescription.plain) &&
        Objects.equals(this.view, contentCreateSpaceDescription.view) &&
        Objects.equals(this._expandable, contentCreateSpaceDescription._expandable);
  }

  @Override
  public int hashCode() {
    return Objects.hash(plain, view, _expandable);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContentCreateSpaceDescription {\n");
    
    sb.append("    plain: ").append(toIndentedString(plain)).append("\n");
    sb.append("    view: ").append(toIndentedString(view)).append("\n");
    sb.append("    _expandable: ").append(toIndentedString(_expandable)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
