/*
 * The Confluence Cloud REST API
 * This document describes the REST API and resources provided by Confluence. The REST APIs are for developers who want to integrate Confluence into their application and for administrators who want to script interactions with the Confluence server.Confluence's REST APIs provide access to resources (data entities) via URI paths. To use a REST API, your application will make an HTTP request and parse the response. The response format is JSON. Your methods will be the standard HTTP methods like GET, PUT, POST and DELETE. Because the REST API is based on open standards, you can use any web development language to access the API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.SuperBatchWebResources;
import io.swagger.client.model.WebResourceDependenciesTags;
import io.swagger.client.model.WebResourceDependenciesUris;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
/**
 * WebResourceDependencies
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-03-29T20:08:21.572793104Z[GMT]")
public class WebResourceDependencies {
  @SerializedName("_expandable")
  private Map _expandable = null;

  @SerializedName("keys")
  private List<String> keys = null;

  @SerializedName("contexts")
  private List<String> contexts = null;

  @SerializedName("uris")
  private WebResourceDependenciesUris uris = null;

  @SerializedName("tags")
  private WebResourceDependenciesTags tags = null;

  @SerializedName("superbatch")
  private SuperBatchWebResources superbatch = null;

  public WebResourceDependencies _expandable(Map _expandable) {
    this._expandable = _expandable;
    return this;
  }

   /**
   * Get _expandable
   * @return _expandable
  **/
  @Schema(description = "")
  public Map getExpandable() {
    return _expandable;
  }

  public void setExpandable(Map _expandable) {
    this._expandable = _expandable;
  }

  public WebResourceDependencies keys(List<String> keys) {
    this.keys = keys;
    return this;
  }

  public WebResourceDependencies addKeysItem(String keysItem) {
    if (this.keys == null) {
      this.keys = new ArrayList<String>();
    }
    this.keys.add(keysItem);
    return this;
  }

   /**
   * Get keys
   * @return keys
  **/
  @Schema(description = "")
  public List<String> getKeys() {
    return keys;
  }

  public void setKeys(List<String> keys) {
    this.keys = keys;
  }

  public WebResourceDependencies contexts(List<String> contexts) {
    this.contexts = contexts;
    return this;
  }

  public WebResourceDependencies addContextsItem(String contextsItem) {
    if (this.contexts == null) {
      this.contexts = new ArrayList<String>();
    }
    this.contexts.add(contextsItem);
    return this;
  }

   /**
   * Get contexts
   * @return contexts
  **/
  @Schema(description = "")
  public List<String> getContexts() {
    return contexts;
  }

  public void setContexts(List<String> contexts) {
    this.contexts = contexts;
  }

  public WebResourceDependencies uris(WebResourceDependenciesUris uris) {
    this.uris = uris;
    return this;
  }

   /**
   * Get uris
   * @return uris
  **/
  @Schema(description = "")
  public WebResourceDependenciesUris getUris() {
    return uris;
  }

  public void setUris(WebResourceDependenciesUris uris) {
    this.uris = uris;
  }

  public WebResourceDependencies tags(WebResourceDependenciesTags tags) {
    this.tags = tags;
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Schema(description = "")
  public WebResourceDependenciesTags getTags() {
    return tags;
  }

  public void setTags(WebResourceDependenciesTags tags) {
    this.tags = tags;
  }

  public WebResourceDependencies superbatch(SuperBatchWebResources superbatch) {
    this.superbatch = superbatch;
    return this;
  }

   /**
   * Get superbatch
   * @return superbatch
  **/
  @Schema(description = "")
  public SuperBatchWebResources getSuperbatch() {
    return superbatch;
  }

  public void setSuperbatch(SuperBatchWebResources superbatch) {
    this.superbatch = superbatch;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebResourceDependencies webResourceDependencies = (WebResourceDependencies) o;
    return Objects.equals(this._expandable, webResourceDependencies._expandable) &&
        Objects.equals(this.keys, webResourceDependencies.keys) &&
        Objects.equals(this.contexts, webResourceDependencies.contexts) &&
        Objects.equals(this.uris, webResourceDependencies.uris) &&
        Objects.equals(this.tags, webResourceDependencies.tags) &&
        Objects.equals(this.superbatch, webResourceDependencies.superbatch);
  }

  @Override
  public int hashCode() {
    return Objects.hash(_expandable, keys, contexts, uris, tags, superbatch);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebResourceDependencies {\n");
    
    sb.append("    _expandable: ").append(toIndentedString(_expandable)).append("\n");
    sb.append("    keys: ").append(toIndentedString(keys)).append("\n");
    sb.append("    contexts: ").append(toIndentedString(contexts)).append("\n");
    sb.append("    uris: ").append(toIndentedString(uris)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    superbatch: ").append(toIndentedString(superbatch)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
