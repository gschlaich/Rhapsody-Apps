/*
 * The Confluence Cloud REST API
 * This document describes the REST API and resources provided by Confluence. The REST APIs are for developers who want to integrate Confluence into their application and for administrators who want to script interactions with the Confluence server.Confluence's REST APIs provide access to resources (data entities) via URI paths. To use a REST API, your application will make an HTTP request and parse the response. The response format is JSON. Your methods will be the standard HTTP methods like GET, PUT, POST and DELETE. Because the REST API is based on open standards, you can use any web development language to access the API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ContentMetadataCurrentuserExpandable;
import io.swagger.client.model.ContentMetadataCurrentuserFavourited;
import io.swagger.client.model.ContentMetadataCurrentuserLastcontributed;
import io.swagger.client.model.ContentMetadataCurrentuserLastmodified;
import io.swagger.client.model.ContentMetadataCurrentuserViewed;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * ContentMetadataCurrentuser
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-03-29T20:08:21.572793104Z[GMT]")
public class ContentMetadataCurrentuser {
  @SerializedName("favourited")
  private ContentMetadataCurrentuserFavourited favourited = null;

  @SerializedName("lastmodified")
  private ContentMetadataCurrentuserLastmodified lastmodified = null;

  @SerializedName("lastcontributed")
  private ContentMetadataCurrentuserLastcontributed lastcontributed = null;

  @SerializedName("viewed")
  private ContentMetadataCurrentuserViewed viewed = null;

  @SerializedName("scheduled")
  private Object scheduled = null;

  @SerializedName("_expandable")
  private ContentMetadataCurrentuserExpandable _expandable = null;

  public ContentMetadataCurrentuser favourited(ContentMetadataCurrentuserFavourited favourited) {
    this.favourited = favourited;
    return this;
  }

   /**
   * Get favourited
   * @return favourited
  **/
  @Schema(description = "")
  public ContentMetadataCurrentuserFavourited getFavourited() {
    return favourited;
  }

  public void setFavourited(ContentMetadataCurrentuserFavourited favourited) {
    this.favourited = favourited;
  }

  public ContentMetadataCurrentuser lastmodified(ContentMetadataCurrentuserLastmodified lastmodified) {
    this.lastmodified = lastmodified;
    return this;
  }

   /**
   * Get lastmodified
   * @return lastmodified
  **/
  @Schema(description = "")
  public ContentMetadataCurrentuserLastmodified getLastmodified() {
    return lastmodified;
  }

  public void setLastmodified(ContentMetadataCurrentuserLastmodified lastmodified) {
    this.lastmodified = lastmodified;
  }

  public ContentMetadataCurrentuser lastcontributed(ContentMetadataCurrentuserLastcontributed lastcontributed) {
    this.lastcontributed = lastcontributed;
    return this;
  }

   /**
   * Get lastcontributed
   * @return lastcontributed
  **/
  @Schema(description = "")
  public ContentMetadataCurrentuserLastcontributed getLastcontributed() {
    return lastcontributed;
  }

  public void setLastcontributed(ContentMetadataCurrentuserLastcontributed lastcontributed) {
    this.lastcontributed = lastcontributed;
  }

  public ContentMetadataCurrentuser viewed(ContentMetadataCurrentuserViewed viewed) {
    this.viewed = viewed;
    return this;
  }

   /**
   * Get viewed
   * @return viewed
  **/
  @Schema(description = "")
  public ContentMetadataCurrentuserViewed getViewed() {
    return viewed;
  }

  public void setViewed(ContentMetadataCurrentuserViewed viewed) {
    this.viewed = viewed;
  }

  public ContentMetadataCurrentuser scheduled(Object scheduled) {
    this.scheduled = scheduled;
    return this;
  }

   /**
   * Get scheduled
   * @return scheduled
  **/
  @Schema(description = "")
  public Object getScheduled() {
    return scheduled;
  }

  public void setScheduled(Object scheduled) {
    this.scheduled = scheduled;
  }

  public ContentMetadataCurrentuser _expandable(ContentMetadataCurrentuserExpandable _expandable) {
    this._expandable = _expandable;
    return this;
  }

   /**
   * Get _expandable
   * @return _expandable
  **/
  @Schema(description = "")
  public ContentMetadataCurrentuserExpandable getExpandable() {
    return _expandable;
  }

  public void setExpandable(ContentMetadataCurrentuserExpandable _expandable) {
    this._expandable = _expandable;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContentMetadataCurrentuser contentMetadataCurrentuser = (ContentMetadataCurrentuser) o;
    return Objects.equals(this.favourited, contentMetadataCurrentuser.favourited) &&
        Objects.equals(this.lastmodified, contentMetadataCurrentuser.lastmodified) &&
        Objects.equals(this.lastcontributed, contentMetadataCurrentuser.lastcontributed) &&
        Objects.equals(this.viewed, contentMetadataCurrentuser.viewed) &&
        Objects.equals(this.scheduled, contentMetadataCurrentuser.scheduled) &&
        Objects.equals(this._expandable, contentMetadataCurrentuser._expandable);
  }

  @Override
  public int hashCode() {
    return Objects.hash(favourited, lastmodified, lastcontributed, viewed, scheduled, _expandable);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContentMetadataCurrentuser {\n");
    
    sb.append("    favourited: ").append(toIndentedString(favourited)).append("\n");
    sb.append("    lastmodified: ").append(toIndentedString(lastmodified)).append("\n");
    sb.append("    lastcontributed: ").append(toIndentedString(lastcontributed)).append("\n");
    sb.append("    viewed: ").append(toIndentedString(viewed)).append("\n");
    sb.append("    scheduled: ").append(toIndentedString(scheduled)).append("\n");
    sb.append("    _expandable: ").append(toIndentedString(_expandable)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
