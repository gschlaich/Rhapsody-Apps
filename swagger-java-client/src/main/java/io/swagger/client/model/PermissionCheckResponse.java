/*
 * The Confluence Cloud REST API
 * This document describes the REST API and resources provided by Confluence. The REST APIs are for developers who want to integrate Confluence into their application and for administrators who want to script interactions with the Confluence server.Confluence's REST APIs provide access to resources (data entities) via URI paths. To use a REST API, your application will make an HTTP request and parse the response. The response format is JSON. Your methods will be the standard HTTP methods like GET, PUT, POST and DELETE. Because the REST API is based on open standards, you can use any web development language to access the API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.GenericLinks;
import io.swagger.client.model.Message;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * This object represents the response for the content permission check API. If the user or group does not have permissions, the following errors may be returned:  - Group does not have permission to the space - Group does not have permission to the content - User is not allowed to use Confluence - User does not have permission to the space - User does not have permission to the content - Anonymous users are not allowed to use Confluence - Anonymous user does not have permission to the space - Anonymous user does not have permission to the content
 */
@Schema(description = "This object represents the response for the content permission check API. If the user or group does not have permissions, the following errors may be returned:  - Group does not have permission to the space - Group does not have permission to the content - User is not allowed to use Confluence - User does not have permission to the space - User does not have permission to the content - Anonymous users are not allowed to use Confluence - Anonymous user does not have permission to the space - Anonymous user does not have permission to the content")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-03-29T20:08:21.572793104Z[GMT]")
public class PermissionCheckResponse {
  @SerializedName("hasPermission")
  private Boolean hasPermission = null;

  @SerializedName("errors")
  private List<Message> errors = null;

  @SerializedName("_links")
  private GenericLinks _links = null;

  public PermissionCheckResponse hasPermission(Boolean hasPermission) {
    this.hasPermission = hasPermission;
    return this;
  }

   /**
   * Get hasPermission
   * @return hasPermission
  **/
  @Schema(required = true, description = "")
  public Boolean isHasPermission() {
    return hasPermission;
  }

  public void setHasPermission(Boolean hasPermission) {
    this.hasPermission = hasPermission;
  }

  public PermissionCheckResponse errors(List<Message> errors) {
    this.errors = errors;
    return this;
  }

  public PermissionCheckResponse addErrorsItem(Message errorsItem) {
    if (this.errors == null) {
      this.errors = new ArrayList<Message>();
    }
    this.errors.add(errorsItem);
    return this;
  }

   /**
   * Get errors
   * @return errors
  **/
  @Schema(description = "")
  public List<Message> getErrors() {
    return errors;
  }

  public void setErrors(List<Message> errors) {
    this.errors = errors;
  }

  public PermissionCheckResponse _links(GenericLinks _links) {
    this._links = _links;
    return this;
  }

   /**
   * Get _links
   * @return _links
  **/
  @Schema(description = "")
  public GenericLinks getLinks() {
    return _links;
  }

  public void setLinks(GenericLinks _links) {
    this._links = _links;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PermissionCheckResponse permissionCheckResponse = (PermissionCheckResponse) o;
    return Objects.equals(this.hasPermission, permissionCheckResponse.hasPermission) &&
        Objects.equals(this.errors, permissionCheckResponse.errors) &&
        Objects.equals(this._links, permissionCheckResponse._links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hasPermission, errors, _links);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PermissionCheckResponse {\n");
    
    sb.append("    hasPermission: ").append(toIndentedString(hasPermission)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("    _links: ").append(toIndentedString(_links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
