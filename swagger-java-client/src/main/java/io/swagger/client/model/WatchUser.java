/*
 * The Confluence Cloud REST API
 * This document describes the REST API and resources provided by Confluence. The REST APIs are for developers who want to integrate Confluence into their application and for administrators who want to script interactions with the Confluence server.Confluence's REST APIs provide access to resources (data entities) via URI paths. To use a REST API, your application will make an HTTP request and parse the response. The response format is JSON. Your methods will be the standard HTTP methods like GET, PUT, POST and DELETE. Because the REST API is based on open standards, you can use any web development language to access the API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Icon;
import io.swagger.client.model.OperationCheckResult;
import io.swagger.client.model.UserDetails;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * This essentially the same as the &#x60;User&#x60; object, but no &#x60;_links&#x60; property and no &#x60;_expandable&#x60; property (therefore, different required fields).
 */
@Schema(description = "This essentially the same as the `User` object, but no `_links` property and no `_expandable` property (therefore, different required fields).")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-03-29T20:08:21.572793104Z[GMT]")
public class WatchUser {
  @SerializedName("type")
  private String type = null;

  @SerializedName("username")
  private String username = null;

  @SerializedName("userKey")
  private String userKey = null;

  @SerializedName("accountId")
  private String accountId = null;

  @SerializedName("profilePicture")
  private Icon profilePicture = null;

  @SerializedName("displayName")
  private String displayName = null;

  @SerializedName("timeZone")
  private String timeZone = null;

  @SerializedName("operations")
  private List<OperationCheckResult> operations = new ArrayList<OperationCheckResult>();

  @SerializedName("isExternalCollaborator")
  private Boolean isExternalCollaborator = null;

  @SerializedName("details")
  private UserDetails details = null;

  @SerializedName("accountType")
  private String accountType = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("publicName")
  private String publicName = null;

  @SerializedName("personalSpace")
  private Object personalSpace = null;

  @SerializedName("externalCollaborator")
  private Boolean externalCollaborator = null;

  public WatchUser type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(required = true, description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public WatchUser username(String username) {
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @Schema(description = "")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }

  public WatchUser userKey(String userKey) {
    this.userKey = userKey;
    return this;
  }

   /**
   * Get userKey
   * @return userKey
  **/
  @Schema(description = "")
  public String getUserKey() {
    return userKey;
  }

  public void setUserKey(String userKey) {
    this.userKey = userKey;
  }

  public WatchUser accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/
  @Schema(required = true, description = "")
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }

  public WatchUser profilePicture(Icon profilePicture) {
    this.profilePicture = profilePicture;
    return this;
  }

   /**
   * Get profilePicture
   * @return profilePicture
  **/
  @Schema(required = true, description = "")
  public Icon getProfilePicture() {
    return profilePicture;
  }

  public void setProfilePicture(Icon profilePicture) {
    this.profilePicture = profilePicture;
  }

  public WatchUser displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * Get displayName
   * @return displayName
  **/
  @Schema(required = true, description = "")
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  public WatchUser timeZone(String timeZone) {
    this.timeZone = timeZone;
    return this;
  }

   /**
   * Get timeZone
   * @return timeZone
  **/
  @Schema(description = "")
  public String getTimeZone() {
    return timeZone;
  }

  public void setTimeZone(String timeZone) {
    this.timeZone = timeZone;
  }

  public WatchUser operations(List<OperationCheckResult> operations) {
    this.operations = operations;
    return this;
  }

  public WatchUser addOperationsItem(OperationCheckResult operationsItem) {
    this.operations.add(operationsItem);
    return this;
  }

   /**
   * Get operations
   * @return operations
  **/
  @Schema(required = true, description = "")
  public List<OperationCheckResult> getOperations() {
    return operations;
  }

  public void setOperations(List<OperationCheckResult> operations) {
    this.operations = operations;
  }

  public WatchUser isExternalCollaborator(Boolean isExternalCollaborator) {
    this.isExternalCollaborator = isExternalCollaborator;
    return this;
  }

   /**
   * Get isExternalCollaborator
   * @return isExternalCollaborator
  **/
  @Schema(required = true, description = "")
  public Boolean isIsExternalCollaborator() {
    return isExternalCollaborator;
  }

  public void setIsExternalCollaborator(Boolean isExternalCollaborator) {
    this.isExternalCollaborator = isExternalCollaborator;
  }

  public WatchUser details(UserDetails details) {
    this.details = details;
    return this;
  }

   /**
   * Get details
   * @return details
  **/
  @Schema(description = "")
  public UserDetails getDetails() {
    return details;
  }

  public void setDetails(UserDetails details) {
    this.details = details;
  }

  public WatchUser accountType(String accountType) {
    this.accountType = accountType;
    return this;
  }

   /**
   * Get accountType
   * @return accountType
  **/
  @Schema(required = true, description = "")
  public String getAccountType() {
    return accountType;
  }

  public void setAccountType(String accountType) {
    this.accountType = accountType;
  }

  public WatchUser email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @Schema(required = true, description = "")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public WatchUser publicName(String publicName) {
    this.publicName = publicName;
    return this;
  }

   /**
   * Get publicName
   * @return publicName
  **/
  @Schema(required = true, description = "")
  public String getPublicName() {
    return publicName;
  }

  public void setPublicName(String publicName) {
    this.publicName = publicName;
  }

  public WatchUser personalSpace(Object personalSpace) {
    this.personalSpace = personalSpace;
    return this;
  }

   /**
   * Get personalSpace
   * @return personalSpace
  **/
  @Schema(required = true, description = "")
  public Object getPersonalSpace() {
    return personalSpace;
  }

  public void setPersonalSpace(Object personalSpace) {
    this.personalSpace = personalSpace;
  }

  public WatchUser externalCollaborator(Boolean externalCollaborator) {
    this.externalCollaborator = externalCollaborator;
    return this;
  }

   /**
   * Get externalCollaborator
   * @return externalCollaborator
  **/
  @Schema(required = true, description = "")
  public Boolean isExternalCollaborator() {
    return externalCollaborator;
  }

  public void setExternalCollaborator(Boolean externalCollaborator) {
    this.externalCollaborator = externalCollaborator;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WatchUser watchUser = (WatchUser) o;
    return Objects.equals(this.type, watchUser.type) &&
        Objects.equals(this.username, watchUser.username) &&
        Objects.equals(this.userKey, watchUser.userKey) &&
        Objects.equals(this.accountId, watchUser.accountId) &&
        Objects.equals(this.profilePicture, watchUser.profilePicture) &&
        Objects.equals(this.displayName, watchUser.displayName) &&
        Objects.equals(this.timeZone, watchUser.timeZone) &&
        Objects.equals(this.operations, watchUser.operations) &&
        Objects.equals(this.isExternalCollaborator, watchUser.isExternalCollaborator) &&
        Objects.equals(this.details, watchUser.details) &&
        Objects.equals(this.accountType, watchUser.accountType) &&
        Objects.equals(this.email, watchUser.email) &&
        Objects.equals(this.publicName, watchUser.publicName) &&
        Objects.equals(this.personalSpace, watchUser.personalSpace) &&
        Objects.equals(this.externalCollaborator, watchUser.externalCollaborator);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, username, userKey, accountId, profilePicture, displayName, timeZone, operations, isExternalCollaborator, details, accountType, email, publicName, personalSpace, externalCollaborator);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WatchUser {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    userKey: ").append(toIndentedString(userKey)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    profilePicture: ").append(toIndentedString(profilePicture)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    timeZone: ").append(toIndentedString(timeZone)).append("\n");
    sb.append("    operations: ").append(toIndentedString(operations)).append("\n");
    sb.append("    isExternalCollaborator: ").append(toIndentedString(isExternalCollaborator)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("    accountType: ").append(toIndentedString(accountType)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    publicName: ").append(toIndentedString(publicName)).append("\n");
    sb.append("    personalSpace: ").append(toIndentedString(personalSpace)).append("\n");
    sb.append("    externalCollaborator: ").append(toIndentedString(externalCollaborator)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
